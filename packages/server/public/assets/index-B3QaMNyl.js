(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();function Dt(n){if(!(typeof window>"u")){window.Notifications=n,window.NotificationSystem=n;try{const e=window.NotificationSystem;if(e){const t=(i,o)=>{if(!e[i]&&typeof e[o]=="function")try{e[i]=e[o].bind(e)}catch{}};["Info","Success","Warning","Error"].forEach(i=>{const o=i.toLowerCase();t("show"+i,o),t(o,"show"+i)}),t("showLoading","loading"),t("loading","showLoading"),!e.showConfirmation&&typeof e.confirm=="function"&&(e.showConfirmation=(i,o,s,a,r)=>e.confirm(i,o,{confirmLabel:s,cancelLabel:a,onConfirm:()=>r?.(!0),onCancel:()=>r?.(!1)}))}}catch{}window.__notificationsReady=!0;try{window.__notificationReadyDispatched||(window.__notificationReadyDispatched=!0,document.dispatchEvent(new Event("notifications-ready")))}catch{}}}class Ut{containerSelector="notification-container";notificationIdPrefix="notification-";defaultDuration=6e3;notificationCount=0;constructor(){this.initContainer()}initContainer(){let e=document.querySelector(`.${this.containerSelector}`);e||(e=document.createElement("div"),e.className=this.containerSelector,document.body.appendChild(e))}getIconForType(e){switch(e){case"success":return'<i class="fas fa-check-circle"></i>';case"warning":return'<i class="fas fa-exclamation-triangle"></i>';case"error":return'<i class="fas fa-times-circle"></i>';case"info":default:return'<i class="fas fa-info-circle"></i>'}}getTitleForType(e){switch(e){case"success":return"Success";case"warning":return"Warning";case"error":return"Error";case"info":default:return"Information"}}show(e){this.initContainer();const{title:t,message:i,type:o="info",duration:s=this.defaultDuration,actions:a=[]}=e,r=`${this.notificationIdPrefix}${++this.notificationCount}`,c=document.createElement("div");c.id=r,c.className=`notification ${o}`,o==="warning"||o==="error"?(c.setAttribute("role","alert"),c.setAttribute("aria-live","assertive")):(c.setAttribute("role","status"),c.setAttribute("aria-live","polite")),c.innerHTML=`
      <div class="notification-header">
        <h3 class="notification-title">${this.getIconForType(o)} ${t||this.getTitleForType(o)}</h3>
        <button class="notification-close" aria-label="Close"><i class='fas fa-times'></i></button>
      </div>
      ${i?`<div class="notification-content">${i}</div>`:""}
      ${a.length?'<div class="notification-actions"></div>':""}
      <div class="notification-progress"><div class="notification-progress-bar"></div></div>
    `;try{const d=document.querySelector(`.${this.containerSelector}`);if(d)d.appendChild(c);else{window.__notifDiag=window.__notifDiag||{missingContainer:0,attempts:0,errors:[]},window.__notifDiag.missingContainer++,this.initContainer();const u=document.querySelector(`.${this.containerSelector}`);if(u)u.appendChild(c);else throw new Error("Container still missing after initContainer")}}catch(d){window.__notifDiag=window.__notifDiag||{missingContainer:0,attempts:0,errors:[]},window.__notifDiag.errors.push("append-failed:"+(d?.message||d))}finally{window.__notifDiag=window.__notifDiag||{missingContainer:0,attempts:0,errors:[]},window.__notifDiag.attempts++}if(a.length){const d=c.querySelector(".notification-actions");a.forEach(u=>{const f=document.createElement("button");f.className=`notification-action ${u.primary?"primary":"secondary"}`,f.textContent=u.label,f.addEventListener("click",p=>{p.preventDefault(),u.onClick?.()}),d.appendChild(f)})}const l=()=>this.close(r);if(c.querySelector(".notification-close")?.addEventListener("click",l),setTimeout(()=>c.classList.add("show"),10),s>0){const d=c.querySelector(".notification-progress-bar");d&&(d.style.transition=`width ${s}ms linear`,setTimeout(()=>d.style.width="100%",10)),setTimeout(l,s)}return r}close(e){const t=document.getElementById(e);t&&(t.classList.remove("show"),setTimeout(()=>t.remove(),500))}update(e,t){const i=document.getElementById(e);if(!i)return;const{title:o,message:s,type:a,resetTimer:r,actions:c}=t;if(a){const l=i.className.split(" ").filter(u=>!["info","success","warning","error"].includes(u));i.className=[...l,a].join(" ");const d=i.querySelector(".notification-title");d&&(d.innerHTML=`${this.getIconForType(a)} ${o||this.getTitleForType(a)}`)}if(o&&!a){const l=i.querySelector(".notification-title");if(l){const d=l.innerHTML.split("</i>")[0]+"</i>";l.innerHTML=`${d} ${o}`}}if(s!==void 0){let l=i.querySelector(".notification-content");!l&&s&&(l=document.createElement("div"),l.className="notification-content",i.querySelector(".notification-header")?.insertAdjacentElement("afterend",l)),l&&(s?l.innerHTML=s:l.remove())}if(r){const l=i.querySelector(".notification-progress-bar");l&&(l.style.transition="none",l.style.width="0%",setTimeout(()=>{l.style.transition="width 6s linear",l.style.width="100%"},10),setTimeout(()=>this.close(e),this.defaultDuration))}if(c){let l=i.querySelector(".notification-actions");!l&&c.length&&(l=document.createElement("div"),l.className="notification-actions",i.querySelector(".notification-progress")?.insertAdjacentElement("beforebegin",l)),l&&(l.innerHTML="",c.forEach(d=>{const u=document.createElement("button");u.className=`notification-action ${d.primary?"primary":"secondary"}`,u.textContent=d.label,u.addEventListener("click",f=>{f.preventDefault(),d.onClick?.()}),l.appendChild(u)}))}}info(e,t,i){return this.show({title:e,message:t,type:"info",duration:i})}success(e,t,i){return this.show({title:e,message:t,type:"success",duration:i})}warning(e,t,i){return this.show({title:e,message:t,type:"warning",duration:i})}error(e,t,i){return this.show({title:e,message:t,type:"error",duration:i})}showInfo=this.info.bind(this);showSuccess=this.success.bind(this);showWarning=this.warning.bind(this);showError=this.error.bind(this);showLoading(e="Loading...",t=""){const i=this.show({title:`<span class="notification-spinner"></span> ${e}`,message:t,type:"info",duration:0});return{id:i,update:(o,s)=>this.update(i,{title:`<span class="notification-spinner"></span> ${o||e}`,message:s??t}),success:(o,s)=>this.update(i,{title:o||"Success",message:s??t,type:"success",resetTimer:!0}),error:(o,s)=>this.update(i,{title:o||"Error",message:s??t,type:"error",resetTimer:!0}),close:()=>this.close(i)}}loading(e,t){return this.showLoading(e,t)}confirm(e,t,i={}){const{confirmLabel:o="Confirm",cancelLabel:s="Cancel",onConfirm:a=()=>{},onCancel:r=()=>{}}=i,c=this.show({title:e,message:t,type:"warning",duration:0,actions:[{label:s,onClick:()=>{r(),this.close(c)}},{label:o,onClick:()=>{a(),this.close(c)},primary:!0}]});return c}showConfirmation(e,t,i="Confirm",o="Cancel",s=()=>{}){return this.confirm(e,t,{confirmLabel:i,cancelLabel:o,onConfirm:()=>s(!0),onCancel:()=>s(!1)})}}function Bt(){const n=window,e=n.NotificationSystem,t=n.Notifications;if(!t||(s=>!!s&&(!s.show||!!s.__queue||typeof s.show!="function"))(t))try{n.Notifications=new Ut}catch(s){console.error("[notifications] Failed to construct rich system",s);return}const o=e&&Array.isArray(e.__queue)?e:t&&Array.isArray(t.__queue)?t:null;if(o&&o.__queue.length){const s=o.__queue.slice();o.__queue.length=0,setTimeout(()=>{s.forEach(a=>{try{switch(a.type){case"success":n.Notifications.showSuccess(a.title,a.message,a.duration);break;case"error":n.Notifications.showError(a.title,a.message,a.duration);break;case"warning":n.Notifications.showWarning(a.title,a.message,a.duration);break;default:n.Notifications.showInfo(a.title,a.message,a.duration);break}}catch(r){console.warn("[notifications] Failed to flush queued guard notification",r)}})},0)}Dt(n.Notifications)}if(typeof document<"u"){const n=()=>{try{return document.body?(Bt(),!0):!1}catch{return!1}};if(!n()){let e=0;const t=setInterval(()=>{e++,(n()||e>20)&&clearInterval(t)},100)}}async function Pt(){try{const n=window.location.hostname==="localhost";let e=7071,t=!1;if(window.LOCAL_FUNCTIONS_PORT)e=window.LOCAL_FUNCTIONS_PORT,t=!0;else if(typeof window.TemplateDoctorConfig?.LOCAL_FUNCTIONS_PORT=="number")e=window.TemplateDoctorConfig.LOCAL_FUNCTIONS_PORT,t=!0;else{const d=new URLSearchParams(window.location.search);d.has("funcPort")&&(e=d.get("funcPort"),t=!0)}const i="/api/v4/client-settings",o="/v4/client-settings";let s=[],a=null;const r=window.location.port,c=[];n?r==="7071"?(c.push(`http://localhost:${e}${i}`),c.push(o),c.push(i)):(c.push(o),c.push(i),t&&c.push(`http://localhost:${e}${i}`)):c.push(o,i);try{(window.TemplateDoctorConfig?.SERVE_FRONTEND||window.SERVE_FRONTEND)&&c.unshift(o)}catch{}let l={};for(const d of c)if(!s.includes(d)){s.push(d);try{if(console.log("[config-loader] attempting client-settings fetch:",d),a=await fetch(d,{cache:"no-store"}),a.ok){l=await a.json(),console.log("[config-loader] loaded client-settings from",d,"keys:",Object.keys(l));break}else console.warn("[config-loader] non-OK response",a.status,"for",d)}catch(u){console.warn("[config-loader] fetch error for",d,u)}}if(!a||!a.ok)throw console.error("[config-loader] failed all client-settings attempts",{tried:s}),new Error("Failed to load client settings from v4 API");return l}catch(n){return console.warn("Error loading environment variables:",n),{}}}async function Nt(){const n=[],e=["/config.json","./config.json","config.json","/app/config.json"];for(const t of e)if(!n.includes(t)){n.push(t);try{const i=await fetch(t,{cache:"no-store"});if(!i.ok){console.debug("[config-loader] config.json candidate not ok",t,i.status);continue}const o=await i.text();try{const s=JSON.parse(o);return console.log("[config-loader] Loaded config.json via",t,"keys:",Object.keys(s)),s}catch{console.warn("[config-loader] JSON parse failed for",t,"first 100 chars:",o.slice(0,100))}}catch(i){console.debug("[config-loader] fetch error for candidate",t,i?.message||i)}}return console.warn("[config-loader] All config.json candidates failed; proceeding with empty config"),{}}async function Ht(){const n=await Nt(),e=await Pt(),t={...n};if(e&&typeof e=="object"){if(e.backend&&typeof e.backend=="object"){const i={...t.backend||{}};typeof e.backend.baseUrl=="string"&&e.backend.baseUrl.trim().length>0&&(i.baseUrl=e.backend.baseUrl),typeof e.backend.functionKey=="string"&&e.backend.functionKey.trim().length>0&&(i.functionKey=e.backend.functionKey),typeof e.backend.apiVersion=="string"&&e.backend.apiVersion.trim().length>0&&(i.apiVersion=e.backend.apiVersion.trim()),t.backend=i}e.GITHUB_CLIENT_ID&&(t.githubOAuth={...t.githubOAuth||{},clientId:e.GITHUB_CLIENT_ID,scope:t.githubOAuth&&t.githubOAuth.scope||"repo read:user",redirectUri:t.githubOAuth&&t.githubOAuth.redirectUri||""}),typeof e.DEFAULT_RULE_SET=="string"&&e.DEFAULT_RULE_SET.trim().length>0&&(t.DEFAULT_RULE_SET=e.DEFAULT_RULE_SET),typeof e.REQUIRE_AUTH_FOR_RESULTS=="string"&&e.REQUIRE_AUTH_FOR_RESULTS.trim().length>0&&(t.REQUIRE_AUTH_FOR_RESULTS=e.REQUIRE_AUTH_FOR_RESULTS),typeof e.AUTO_SAVE_RESULTS=="string"&&e.AUTO_SAVE_RESULTS.trim().length>0&&(t.AUTO_SAVE_RESULTS=e.AUTO_SAVE_RESULTS),typeof e.ARCHIVE_ENABLED=="string"&&e.ARCHIVE_ENABLED.trim().length>0&&(t.ARCHIVE_ENABLED=e.ARCHIVE_ENABLED),typeof e.ARCHIVE_COLLECTION=="string"&&e.ARCHIVE_COLLECTION.trim().length>0&&(t.ARCHIVE_COLLECTION=e.ARCHIVE_COLLECTION),typeof e.DISPATCH_TARGET_REPO=="string"&&e.DISPATCH_TARGET_REPO.trim().length>0&&(t.DISPATCH_TARGET_REPO=e.DISPATCH_TARGET_REPO)}return console.log("Consolidated config:",t),t}window.ConfigLoader={loadConfig:Ht};(function(){function n(s){return s?String(s).replace(/\/$/,""):""}function e(){const s=window.TemplateDoctorConfig||{};return s.apiBase?n(s.apiBase):["localhost","127.0.0.1"].includes(window.location.hostname)&&window.location.port==="7071"?"http://localhost:7071":n(window.location.origin)}function t(s,a){if(!a)return"/api";const r=s.replace(/^\//,"");return r.startsWith(`api/${a}/`)||r===`api/${a}`?"/api":`/api/${a}`}function i(s,a){const r=window.TemplateDoctorConfig||{},c=a&&a.versionOverride||r.apiVersion||r.backend&&r.backend.apiVersion||"",l=String(s||"").replace(/^\//,""),d=t(l,c),u=e();let f=`${u}${d}/${l}`.replace(/([^:])\/+/,"$1/");u===n(window.location.origin)&&c&&/^v\d+/.test(c)&&(/\/v\d+\//.test(f)||(f=f.replace(/\/api(?:\/v\d+)?\//,`/${c}/`)));const p=a&&a.query;if(p&&typeof p=="object"){const h=Object.entries(p).filter(([,g])=>g!=null&&g!=="").map(([g,w])=>`${encodeURIComponent(g)}=${encodeURIComponent(String(w))}`).join("&");h&&(f+=(f.includes("?")?"&":"?")+h)}return f}function o(){if(!window.TemplateDoctorConfig)return null;const s=window.TemplateDoctorConfig;return s.apiVersion||s.backend&&s.backend.apiVersion||null}window.ApiRoutes={build:i,currentVersion:o}})();(function(){const n={apiBase:`${window.location.origin}`,apiVersion:"v4",defaultRuleSet:"dod",requireAuthForResults:!0,autoSaveResults:!1,archiveEnabled:!1,archiveCollection:"aigallery",dispatchTargetRepo:""},e=window.TemplateDoctorConfig||{},t=e.features?{...e.features}:void 0,i=Object.assign({},n,e);t&&(i.features=t),window.TemplateDoctorConfig=i,window.TemplateDoctorRuntime={lastMode:"unknown",fallbackUsed:!1},(async()=>{try{if(window.ConfigLoader&&window.ConfigLoader.loadConfig){const a=await window.ConfigLoader.loadConfig();console.log("[runtime-config] loaded config via ConfigLoader");const r={...a};if(!r.apiBase&&a.backend&&typeof a.backend.baseUrl=="string"&&(r.apiBase=a.backend.baseUrl),r.apiBase&&/localhost:7071/.test(r.apiBase)&&window.location.port&&window.location.port!=="7071"&&(console.log("[runtime-config] normalizing stale apiBase",r.apiBase,"->",window.location.origin),r.apiBase=window.location.origin),a.backend&&typeof a.backend.functionKey=="string"&&(r.functionKey=a.backend.functionKey),a.API_BASE_URL&&(r.apiBase=a.API_BASE_URL),a.FUNCTION_KEY&&(r.functionKey=a.FUNCTION_KEY),a.DISPATCH_TARGET_REPO&&(r.dispatchTargetRepo=a.DISPATCH_TARGET_REPO),a.DEFAULT_RULE_SET&&(r.defaultRuleSet=String(a.DEFAULT_RULE_SET).toLowerCase()),typeof a.REQUIRE_AUTH_FOR_RESULTS<"u"&&a.REQUIRE_AUTH_FOR_RESULTS!==null){const d=String(a.REQUIRE_AUTH_FOR_RESULTS).trim().toLowerCase();r.requireAuthForResults=/^(1|true|yes|on)$/i.test(d)}if(typeof a.AUTO_SAVE_RESULTS<"u"&&a.AUTO_SAVE_RESULTS!==null){const d=String(a.AUTO_SAVE_RESULTS).trim().toLowerCase();r.autoSaveResults=/^(1|true|yes|on)$/i.test(d)}!r.apiVersion&&r.backend&&r.backend.apiVersion&&(r.apiVersion=r.backend.apiVersion);const c=window.TemplateDoctorConfig||{},l=Object.assign({},n,c,r);(c.features||r.features)&&(l.features=Object.assign({},c.features||{},r.features||{})),window.TemplateDoctorConfig=l,console.debug("[runtime-config] dispatching template-config-loaded (ConfigLoader path)",{apiBase:window.TemplateDoctorConfig.apiBase}),document.dispatchEvent(new CustomEvent("template-config-loaded"));return}const s=await fetch("config.json",{cache:"no-store"});if(s.ok){const a=await s.json();if(a&&typeof a=="object"){const r={...a};!r.apiBase&&a.backend&&typeof a.backend.baseUrl=="string"&&(r.apiBase=a.backend.baseUrl),r.apiBase&&/localhost:7071/.test(r.apiBase)&&window.location.port&&window.location.port!=="7071"&&(console.log("[runtime-config] normalizing stale apiBase (config.json)",r.apiBase,"->",window.location.origin),r.apiBase=window.location.origin),a.backend&&typeof a.backend.functionKey=="string"&&(r.functionKey=a.backend.functionKey),a.defaultRuleSet&&(r.defaultRuleSet=String(a.defaultRuleSet).toLowerCase()),typeof a.requireAuthForResults=="boolean"&&(r.requireAuthForResults=a.requireAuthForResults),typeof a.autoSaveResults=="boolean"&&(r.autoSaveResults=a.autoSaveResults),typeof a.archiveEnabled=="boolean"&&(r.archiveEnabled=a.archiveEnabled),typeof a.archiveCollection=="string"&&(r.archiveCollection=a.archiveCollection),typeof a.dispatchTargetRepo=="string"&&(r.dispatchTargetRepo=a.dispatchTargetRepo),!r.apiVersion&&r.backend&&r.backend.apiVersion&&(r.apiVersion=r.backend.apiVersion);const c=window.TemplateDoctorConfig||{},l=Object.assign({},n,c,r);(c.features||r.features)&&(l.features=Object.assign({},c.features||{},r.features||{})),window.TemplateDoctorConfig=l,console.log("[runtime-config] loaded config.json"),console.debug("[runtime-config] dispatching template-config-loaded (config.json path)",{apiBase:window.TemplateDoctorConfig.apiBase}),document.dispatchEvent(new CustomEvent("template-config-loaded"))}else console.log("[runtime-config] no config.json found, using defaults")}else console.warn("[runtime-config] config.json not found (HTTP",s.status,") using defaults only"),console.debug("[runtime-config] dispatching template-config-loaded (missing config.json path)"),document.dispatchEvent(new CustomEvent("template-config-loaded"))}catch(s){console.error("[runtime-config] error loading config:",s),console.log("[runtime-config] using default configuration"),console.debug("[runtime-config] dispatching template-config-loaded (error path)"),document.dispatchEvent(new CustomEvent("template-config-loaded"))}})().catch(()=>console.log("[runtime-config] failed to load config, using defaults"))})();function S(n,e,t){const i=new Date().toISOString();console.log(`[${i}][${n}] ${e}`,t!==void 0?t:"")}function Ue(){const n=window.location.pathname||"/",e=n.match(/\.[a-zA-Z0-9]+$/)?n.substring(0,n.lastIndexOf("/")):n;return e==="/"?"":e.endsWith("/")?e.slice(0,-1):e}const k={clientId:"",redirectUri:window.location.origin+Ue()+"/callback.html",scope:"public_repo read:user",authUrl:"https://github.com/login/oauth/authorize",tokenStorageKey:"gh_access_token",userStorageKey:"gh_user_info"};console.log("AUTH_CONFIG.redirectUri:",k.redirectUri);console.log("window.location.origin:",window.location.origin);console.log("getBasePath():",Ue());async function Ot(){try{if(window.ConfigLoader&&window.ConfigLoader.loadConfig){const i=await window.ConfigLoader.loadConfig();i.githubOAuth&&(i.githubOAuth.clientId&&(k.clientId=i.githubOAuth.clientId),i.githubOAuth.scope&&(k.scope=i.githubOAuth.scope),i.githubOAuth.authUrl&&(k.authUrl=i.githubOAuth.authUrl),i.githubOAuth.redirectUri&&i.githubOAuth.redirectUri.trim()!==""&&(k.redirectUri=i.githubOAuth.redirectUri)),i.GITHUB_CLIENT_ID&&(k.clientId=i.GITHUB_CLIENT_ID),console.log("Updated AUTH_CONFIG:",{clientId:k.clientId?"Set":"Not set",redirectUri:k.redirectUri,scope:k.scope,authUrl:k.authUrl});return}const n=Ue(),e=await fetch(`${n}/config.json`,{cache:"no-store"});if(!e.ok)return;const t=await e.json();t?.githubOAuth?.clientId&&(k.clientId=t.githubOAuth.clientId),t?.githubOAuth?.scope&&(k.scope=t.githubOAuth.scope),t?.githubOAuth?.authUrl&&(k.authUrl=t.githubOAuth.authUrl),t?.githubOAuth?.redirectUri&&t.githubOAuth.redirectUri.trim()!==""&&(k.redirectUri=t.githubOAuth.redirectUri)}catch(n){console.error("Error loading runtime config:",n)}}function Mt(n=!1){try{if(!window.location.search)return!1;const e=new URLSearchParams(window.location.search),t=e.get("code"),i=e.get("state");if(!t)return!1;const o=window.location.pathname||"",s=/callback\.html$/i.test(o);if(!s&&!n)return console.warn("[GitHubAuth][oauth] Found code parameter on non-callback page; leaving intact. Set forceCaptureOnIndex=true to handle here."),!1;if(!s&&sessionStorage.getItem("gh_auth_code"))return console.warn("[GitHubAuth][oauth] Already have stored code; not overwriting from index.html"),!1;console.log("[GitHubAuth][oauth] Capturing OAuth params on "+(s?"callback page":"index page")),sessionStorage.setItem("gh_auth_code",t),i&&sessionStorage.setItem("gh_auth_state",i);const a=window.location.origin+window.location.pathname;return window.history.replaceState({},document.title,a),!0}catch(e){return console.error("[GitHubAuth][oauth] Capture error",e),!1}}const Ft=/callback\.html$/i.test(window.location.pathname||""),qt=Mt(!0);Ft&&qt&&setTimeout(()=>{document.location.pathname.includes("callback.html")&&(console.log("[GitHubAuth][oauth] Still on callback page after param capture; auto-redirecting to index"),document.location.href=document.location.origin+document.location.pathname.replace(/callback\.html$/,"")+"index.html")},500);window.addEventListener("load",()=>{try{const n=localStorage.getItem("gh_access_token"),e=sessionStorage.getItem("gh_auth_code");!n&&e&&(console.log("[GitHubAuth][oauth] Detected pending auth code post-load; initiating token exchange."),window.GitHubAuth?.exchangeCodeForToken?window.GitHubAuth.exchangeCodeForToken(e).catch(t=>console.error("[GitHubAuth][oauth] Deferred exchange failed",t)):typeof window.exchangeCodeForToken=="function"?window.exchangeCodeForToken(e).catch(t=>console.error("[GitHubAuth][oauth] Deferred exchange failed",t)):console.error("[GitHubAuth][oauth] No exchange method available"))}catch(n){console.debug("[GitHubAuth][oauth] Deferred exchange check failed",n)}});class zt{constructor(){S("GitHubAuth","Initializing authentication handler"),this.accessToken=localStorage.getItem(k.tokenStorageKey),S("GitHubAuth","Access token from localStorage:",this.accessToken?"Present":"Not present"),this.userInfo=JSON.parse(localStorage.getItem(k.userStorageKey)||"null"),S("GitHubAuth","User info from localStorage:",this.userInfo),this.initEventListeners(),this.checkAuthentication()}initEventListeners(){const e=document.getElementById("login-button");e&&e.addEventListener("click",()=>this.login());const t=document.getElementById("logout-button");t&&t.addEventListener("click",()=>this.logout()),this.handleCallback()}login(){console.log("Starting login flow with scopes:",k.scope),console.log("Configured redirectUri:",k.redirectUri),this.clearGitHubCookies();const e=new URL(k.authUrl);if(e.searchParams.append("client_id",k.clientId),e.searchParams.append("redirect_uri",k.redirectUri),e.searchParams.append("scope",k.scope),e.searchParams.append("state",this.generateState()),console.log("Full auth URL:",e.toString()),!k.clientId){const t=window.Notifications?.info?.bind(window.Notifications);t&&t("Preparing login…","Loading authentication configuration",2e3);const i=window.Notifications?.error?.bind(window.Notifications);i?i("Missing OAuth client ID","GitHub OAuth clientId is not configured. Set GITHUB_CLIENT_ID environment variable in your .env file.",6e3):alert("GitHub OAuth clientId is not configured. Please set GITHUB_CLIENT_ID in your .env file.");return}e.searchParams.append("allow_signup","true"),e.searchParams.append("_t",Date.now()),e.searchParams.append("_r",Math.random().toString(36).substring(7)),e.searchParams.append("prompt","consent"),console.log("Redirecting to GitHub OAuth URL:",e.toString()),window.location.href=e.toString()}clearGitHubCookies(){console.log("Attempting to clear GitHub cookies"),[{name:"_gh_sess",domain:".github.com",path:"/"},{name:"user_session",domain:".github.com",path:"/"},{name:"__Host-user_session_same_site",domain:"",path:"/"},{name:"logged_in",domain:".github.com",path:"/"},{name:"dotcom_user",domain:".github.com",path:"/"}].forEach(t=>{try{const i=`${t.name}=; path=${t.path}; ${t.domain?"domain="+t.domain+";":""} expires=Thu, 01 Jan 1970 00:00:00 GMT; secure; samesite=none`;console.log("Clearing cookie:",i),document.cookie=i}catch(i){console.error("Error clearing cookie:",t.name,i)}})}generateState(){const e=Math.random().toString(36).substring(2,15);return localStorage.setItem("oauth_state",e),e}handleCallback(){S("handleCallback","Checking for code in sessionStorage");const e=sessionStorage.getItem("gh_auth_code"),t=sessionStorage.getItem("gh_auth_state"),i=localStorage.getItem("oauth_state");S("handleCallback","Code from sessionStorage:",e),e?(S("handleCallback","Found code in sessionStorage"),t!==i&&S("handleCallback","State mismatch, potential CSRF attack"),this.exchangeCodeForToken(e),sessionStorage.removeItem("gh_auth_code"),sessionStorage.removeItem("gh_auth_state")):S("handleCallback","No code found in sessionStorage")}exchangeCodeForToken(e){S("exchangeCodeForToken","Starting token exchange with code",e),S("exchangeCodeForToken","Sending request to Azure Function"),sessionStorage.setItem("last_auth_code",e);const t=window.location.hostname==="localhost";let i;t?i=window.location.port==="7071"?"http://localhost:7071/api/v4/github-oauth-token":`${window.location.origin}/v4/github-oauth-token`:window.ApiRoutes?i=window.ApiRoutes.build("github-oauth-token"):i="/api/v4/github-oauth-token",S("exchangeCodeForToken",`API URL: ${i}`),fetch(i,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},mode:"cors",body:JSON.stringify({code:e})}).then(o=>{if(S("exchangeCodeForToken","Got response from token exchange",{status:o.status,statusText:o.statusText,ok:o.ok,headers:Array.from(o.headers.entries())}),!o.ok)throw new Error(`HTTP error! status: ${o.status}`);return o.clone().text().then(s=>{S("exchangeCodeForToken","Raw token exchange response:",s);try{const a=JSON.parse(s);if(S("exchangeCodeForToken","Raw token exchange response as JSON:",a),a.error){const r=`${a.error}: ${a.error_description||"Unknown error"}`,c=window.Notifications?.error?.bind(window.Notifications);throw c?c("GitHub OAuth Error",r,1e4):alert(`GitHub OAuth Error: ${r}`),new Error(r)}a.scope&&S("exchangeCodeForToken","Token scopes from response:",a.scope)}catch(a){S("exchangeCodeForToken","Failed to parse raw response as JSON:",a)}return o.json()})}).then(o=>{if(S("exchangeCodeForToken","Token exchange response data received",o),o&&S("exchangeCodeForToken","Detailed token information:",{hasAccessToken:!!o.access_token,tokenType:o.token_type||null,scopes:o.scope?o.scope.split(" "):null,hasRefreshToken:!!o.refresh_token,expiresIn:o.expires_in||null,responseKeys:Object.keys(o)}),o.access_token)return S("exchangeCodeForToken","Successfully received access token"),S("exchangeCodeForToken","Token scopes (if provided):",o.scope||"Not provided in response"),this.setAccessToken(o.access_token),this.fetchUserInfo(),sessionStorage.removeItem("last_auth_code"),!0;throw o.error?(S("exchangeCodeForToken","Error in token response",o.error),new Error(o.error)):(S("exchangeCodeForToken","No token in response",o),new Error("No access token received"))}).catch(o=>{S("exchangeCodeForToken","Error exchanging code for token",o.message),sessionStorage.setItem("auth_error",o.message),S("exchangeCodeForToken","Full error details:",{message:o.message,name:o.name,stack:o.stack})})}setAccessToken(e){this.accessToken=e,localStorage.setItem(k.tokenStorageKey,e),this.fetchUserInfo()}fetchUserInfo(){return S("fetchUserInfo","Fetching user information"),this.accessToken?(S("fetchUserInfo","Making request to GitHub API"),fetch("https://api.github.com/user",{headers:{Authorization:`token ${this.accessToken}`}}).then(e=>{if(S("fetchUserInfo","Response from GitHub API",{status:e.status,statusText:e.statusText,ok:e.ok}),!e.ok)throw new Error(`Failed to fetch user info: ${e.status} ${e.statusText}`);return e.json()}).then(e=>(S("fetchUserInfo","User data received",e),this.userInfo={login:e.login,name:e.name||e.login,avatarUrl:e.avatar_url},localStorage.setItem(k.userStorageKey,JSON.stringify(this.userInfo)),this.updateUI(),window.GitHubClient&&(window.GitHubClient.currentUser=this.userInfo,S("fetchUserInfo","Updated GitHub client with user info")),this.userInfo)).catch(e=>(S("fetchUserInfo","Error fetching user info",e.message),e.message.includes("401")&&(S("fetchUserInfo","Token is invalid, logging out"),this.logout()),null))):(S("fetchUserInfo","No access token available"),Promise.reject("No access token"))}checkAuthentication(){S("checkAuthentication","Checking authentication status");const e=sessionStorage.getItem("github_auth_code"),t=sessionStorage.getItem("github_auth_timestamp"),i=sessionStorage.getItem("gh_auth_code");if(!this.accessToken&&i&&(S("checkAuthentication","Found gh_auth_code but no access token yet. Attempting exchange now."),this.exchangeCodeForToken(i)),e&&t){const o=new Date(t),a=(new Date-o)/1e3;a<30&&!this.accessToken?(S("checkAuthentication","Found recent pending auth code, retrying exchange"),this.exchangeCodeForToken(e),sessionStorage.removeItem("github_auth_code"),sessionStorage.removeItem("github_auth_timestamp")):a>=30&&(S("checkAuthentication","Clearing expired pending auth code"),sessionStorage.removeItem("github_auth_code"),sessionStorage.removeItem("github_auth_timestamp"))}return this.updateUI(),this.accessToken&&!this.userInfo&&(S("checkAuthentication","Have token but no user info, fetching user info"),this.fetchUserInfo()),!!this.accessToken}simulateLogin(){console.log("Simulating login for local development"),this.accessToken="simulated_token",localStorage.setItem(k.tokenStorageKey,this.accessToken),this.userInfo={login:"dev-user",name:"Development User",avatarUrl:"https://avatars.githubusercontent.com/u/0"},localStorage.setItem(k.userStorageKey,JSON.stringify(this.userInfo))}updateUI(){console.log("updateUI: Access Token:",this.accessToken?"Present":"Not present"),console.log("updateUI: User Info:",this.userInfo);const e=document.getElementById("login-button"),t=document.getElementById("user-profile"),i=document.getElementById("username"),o=document.getElementById("user-avatar"),s=document.getElementById("search-section"),a=document.getElementById("welcome-section");this.accessToken?(e&&(e.style.display="none"),t&&(t.style.display="flex"),i&&(i.textContent=this.userInfo&&(this.userInfo.name||this.userInfo.login)||"Loading…"),o&&(o.src=this.userInfo&&this.userInfo.avatarUrl||"https://avatars.githubusercontent.com/u/0"),s&&(s.style.display="block"),a&&(a.style.display="none"),document.dispatchEvent(new CustomEvent("auth-state-changed",{detail:{authenticated:!0,provisional:!this.userInfo},bubbles:!0,cancelable:!0})),this.userInfo||this.fetchUserInfo()):(e&&(e.style.display="flex"),t&&(t.style.display="none"),s&&(s.style.display="none"),a&&(a.style.display="block"),document.dispatchEvent(new CustomEvent("auth-state-changed",{detail:{authenticated:!1},bubbles:!0,cancelable:!0})))}async revokeToken(){if(!this.accessToken)return Promise.resolve();try{return console.log("Revoking token and clearing GitHub session..."),this.clearGitHubCookies(),Promise.resolve()}catch(e){return console.error("Error revoking token:",e),Promise.resolve()}}logout(){console.log("Logging out user..."),this.revokeToken().finally(()=>{console.log("Clearing all storage..."),sessionStorage.clear(),localStorage.removeItem(k.tokenStorageKey),localStorage.removeItem(k.userStorageKey),localStorage.removeItem("oauth_state");for(let t=0;t<localStorage.length;t++){const i=localStorage.key(t);i&&(i.includes("gh_")||i.includes("github")||i.includes("oauth")||i.includes("token"))&&(console.log("Removing localStorage item:",i),localStorage.removeItem(i))}this.accessToken=null,this.userInfo=null,this.updateUI(),console.log("Logged out successfully, redirecting to home page");const e=new URL(window.location.origin);e.searchParams.append("_t",Date.now()),e.searchParams.append("_r",Math.random().toString(36).substring(7)),e.searchParams.append("logged_out","true"),e.searchParams.append("require_permissions","public_repo"),window.Notifications?(window.Notifications.success("Logged Out Successfully","You have been logged out of GitHub. Please log in again with the required permissions.",5e3),setTimeout(()=>{window.location.href=e.toString()},1e3)):window.location.href=e.toString()})}getAccessToken(){return this.accessToken}getToken(){return this.getAccessToken()}getUserInfo(){return this.userInfo}getUsername(){return this.userInfo?.login||this.userInfo?.name||null}isAuthenticated(){const e=!!this.accessToken;return console.log("isAuthenticated check - token exists:",e),e}}console.log("[GitHubAuth] Creating instance immediately, will update config async");window.GitHubAuth=new zt;Ot().catch(()=>{}).finally(()=>{console.log("[GitHubAuth] Config loaded, dispatching ready event"),document.dispatchEvent(new CustomEvent("github-auth-ready"))});window.exchangeCodeForToken=function(n){return console.log("[GitHubAuth] Global exchangeCodeForToken called with",n),window.GitHubAuth?.exchangeCodeForToken?window.GitHubAuth.exchangeCodeForToken(n):(console.error("[GitHubAuth] No GitHubAuth instance available for token exchange"),Promise.reject(new Error("No GitHubAuth instance available")))};class Gt{baseUrl="https://api.github.com";graphQLUrl="https://api.github.com/graphql";auth;currentUser=null;_readyPromise;_resolveReady;_initialized=!1;constructor(){this.auth=window.GitHubAuth,this._readyPromise=new Promise(e=>this._resolveReady=e),this.bootstrap()}bootstrap(){if(this.auth){this.finishInit();return}let e=0;const t=10,i=setInterval(()=>{e++,this.auth=window.GitHubAuth,(this.auth||e>=t)&&(clearInterval(i),this.finishInit())},500)}async finishInit(){if(!this._initialized){this._initialized=!0;try{this.auth?.isAuthenticated?.()&&(this.currentUser=await this.getAuthenticatedUser())}catch(e){console.warn("[GitHubClientTS] load current user failed (ignored)",e)}this._resolveReady(),document.dispatchEvent(new CustomEvent("github-client-ready"))}}ready(){return this._readyPromise}getTokenOrThrow(){const e=this.auth?.getAccessToken?.()||this.auth?.getToken?.();if(!e)throw new Error("Not authenticated");return e}async request(e,t={}){const i=this.getTokenOrThrow(),o=e.startsWith("http")?e:`${this.baseUrl}${e}`,s={Accept:"application/vnd.github.v3+json",Authorization:`token ${i}`,...t.headers},a=await fetch(o,{...t,headers:s});if(!a.ok){let r=null;try{r=await a.json()}catch{}const c=new Error(r?.message||`GitHub API error: ${a.status}`);throw c.status=a.status,c.data=r,c}return a.status===204?null:a.json()}async requestAllPages(e,t={}){const i=this.getTokenOrThrow();let s=`${e.startsWith("http")?"":this.baseUrl}${e}`;const a=[],r={Accept:"application/vnd.github.v3+json",Authorization:`token ${i}`,...t.headers},c=l=>{if(!l)return null;for(const d of l.split(",")){const u=d.match(/<([^>]+)>;\s*rel="next"/);if(u)return u[1]}return null};for(;s;){const l=await fetch(s,{...t,headers:r});if(!l.ok)throw new Error(`GitHub API error: ${l.status}`);const d=await l.json();if(Array.isArray(d))a.push(...d);else return d;s=c(l.headers.get("Link"))}return a}async getAuthenticatedUser(){return this.request("/user")}async getRepository(e,t){return this.request(`/repos/${e}/${t}`)}async getDefaultBranch(e,t){return(await this.getRepository(e,t)).default_branch}async listAllFiles(e,t,i){const o=i||await this.getDefaultBranch(e,t),s=await this.request(`/repos/${e}/${t}/git/trees/${encodeURIComponent(o)}?recursive=1`);return s?.tree?s.tree.filter(a=>a.type==="blob").map(a=>a.path):[]}async getFileContent(e,t,i,o){const s=o?`?ref=${encodeURIComponent(o)}`:"",a=await this.request(`/repos/${e}/${t}/contents/${encodeURIComponent(i)}${s}`);if(a&&a.content&&a.encoding==="base64")try{return atob(a.content.replace(/\n/g,""))}catch{return decodeURIComponent(escape(window.atob(a.content.replace(/\n/g,""))))}return typeof a=="string"?a:""}async checkTokenScopes(){const t={Authorization:`token ${this.getTokenOrThrow()}`};let i=null;try{i=await fetch(`${this.baseUrl}/rate_limit`,{method:"HEAD",headers:t})}catch{}(!i||!i.ok)&&(i=await fetch(`${this.baseUrl}/rate_limit`,{headers:t}));const o=i.headers.get("x-oauth-scopes")||"";return o?o.split(/,\s*/).filter(Boolean):[]}async ensureLabelsExist(e,t,i){if(!i||i.length===0)return[];const o=await this.requestAllPages(`/repos/${e}/${t}/labels?per_page=100`),s=new Set(o.map(r=>String(r.name).toLowerCase())),a=i.filter(r=>!s.has(r.toLowerCase()));return await Promise.all(a.map(r=>this.request(`/repos/${e}/${t}/labels`,{method:"POST",body:JSON.stringify({name:r,color:"ededed"}),headers:{"Content-Type":"application/json"}}).catch(c=>{console.warn("Label create failed (ignored)",r,c)}))),i}async createIssue(e,t,i){await this.ensureLabelsExist(e,t,i.labels||[]);const o={title:i.title,body:i.body||"",labels:i.labels||[]};return this.request(`/repos/${e}/${t}/issues`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)})}async searchRepositories(e,t=1,i=10){if(!e)return{total_count:0,items:[]};const o=new URLSearchParams({q:e,page:String(t),per_page:String(i)});return this.request(`/search/repositories?${o.toString()}`)}async graphql(e,t={}){const i=this.getTokenOrThrow(),s=await(await fetch(this.graphQLUrl,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`token ${i}`},body:JSON.stringify({query:e,variables:t})})).json();if(s.errors){const a=new Error("GraphQL Error: "+s.errors[0]?.message);throw a.errors=s.errors,a}return s.data}getCurrentUsername(){try{if(this.auth?.getUsername){const e=this.auth.getUsername();if(e)return e}}catch{}return this.currentUser?.login||null}async getRepoNodeId(e,t){return(await this.graphql("query($owner: String!, $name: String!){ repository(owner:$owner,name:$name){ id } }",{owner:e,name:t})).repository.id}async getLabelNodeIds(e,t,i){if(!i||i.length===0)return[];const a=(await this.graphql("query($owner:String!,$name:String!){ repository(owner:$owner,name:$name){ labels(first:100){ nodes { id name } } } }",{owner:e,name:t})).repository.labels.nodes;return i.map(r=>a.find(c=>c.name===r)?.id||null).filter(Boolean)}async createIssueGraphQL(e,t,i,o,s=[]){const a=await this.checkTokenScopes().catch(()=>[]);if(!(a.includes("public_repo")||a.includes("repo")))throw new Error('Your GitHub token does not have the "public_repo" permission required to create issues');let r;try{r=await this.getRepoNodeId(e,t)}catch{throw new Error(`Could not find repository: ${e}/${t}`)}let c=null;try{const h=await this.graphql("query($owner:String!,$repo:String!){ repository(owner:$owner,name:$repo){ id suggestedActors(capabilities:[CAN_BE_ASSIGNED],first:10){ nodes { login __typename ... on Bot { id } ... on User { id } } } } }",{owner:e,repo:t});c=h.repository.suggestedActors.nodes.find(g=>g.login==="copilot-agent-swe")||h.repository.suggestedActors.nodes.find(g=>g.login==="copilot-swe-agent")||null}catch{}let l=[];try{l=await this.getLabelNodeIds(e,t,s)}catch{}const d=Date.now();let u;if(c)u=await this.graphql("mutation($input:CreateIssueInput!){ createIssue(input:$input){ issue { id number url title assignees(first:5){nodes{login id}} } } }",{input:{repositoryId:r,title:i,body:o,assigneeIds:[c.id],labelIds:l}});else{u=await this.graphql("mutation($repositoryId:ID!,$title:String!,$body:String,$labelIds:[ID!]){ createIssue(input:{repositoryId:$repositoryId,title:$title,body:$body,labelIds:$labelIds}){ issue { id number url title } } }",{repositoryId:r,title:i,body:o,labelIds:l});try{const h=u.createIssue.issue.number,g=this.getTokenOrThrow();(await fetch(`${this.baseUrl}/repos/${e}/${t}/issues/${h}/assignees`,{method:"POST",headers:{Authorization:`token ${g}`,Accept:"application/vnd.github.v3+json","Content-Type":"application/json"},body:JSON.stringify({assignees:["@copilot-agent-swe"]})})).ok||await this.assignIssueToCopilotBot(e,t,h).catch(()=>{})}catch{}}const f=Date.now()-d;return console.debug(`[GitHubClientTS] Issue created in ${f}ms`),u.createIssue.issue}async assignIssueToCopilotBot(e,t,i){try{const s=await this.graphql("query($owner:String!,$repo:String!,$number:Int!){ repository(owner:$owner,name:$repo){ issue(number:$number){ id } suggestedActors(capabilities:[CAN_BE_ASSIGNED],first:10){ nodes { login __typename ... on Bot { id } ... on User { id } } } } }",{owner:e,repo:t,number:i}),a=s.repository.issue.id,r=s.repository.suggestedActors.nodes.find(l=>l.login==="copilot-agent-swe"||l.login==="copilot-swe-agent");return r?(await this.graphql("mutation($issueId:ID!,$assigneeId:ID!){ addAssigneesToAssignable(input:{assignableId:$issueId,assigneeIds:[$assigneeId]}){ clientMutationId } }",{issueId:a,assigneeId:r.id}),!0):!1}catch{return!1}}async findIssuesByTitle(e,t,i,o){return(await this.graphql('query($owner:String!,$name:String!){ repository(owner:$owner,name:$name){ issues(first:20,states:[OPEN,CLOSED],filterBy:{ since:"2022-01-01T00:00:00Z"}){ nodes { id number title url state labels(first:10){ nodes { name } } } } } }',{owner:e,name:t})).repository.issues.nodes.filter(r=>r.title===i&&(!o||r.labels.nodes.some(c=>c.name===o)))}async forkRepository(e,t){const i=await this.request(`/repos/${e}/${t}/forks`,{method:"POST"});try{const o=await this.waitForForkAvailability(e,t);if(o)return o}catch(o){console.warn("[GitHubClientTS] Fork availability polling failed",o)}return i}async waitForForkAvailability(e,t,i=6e4,o=1500){const s=this.getCurrentUsername();if(!s)return null;const a=Date.now(),r=c=>new Promise(l=>setTimeout(l,c));for(;Date.now()-a<i;){try{const c=await this.request(`/repos/${s}/${t}`),l=c?.fork===!0,d=c?.parent?.full_name?c.parent.full_name.toLowerCase()===`${e}/${t}`.toLowerCase():!0;if(l&&d)return c}catch(c){c?.status&&c.status!==404&&console.warn("[GitHubClientTS] waitForForkAvailability transient error:",c.message)}await r(o)}return null}async checkUserHasFork(e,t){const i=this.getCurrentUsername();if(!i)return!1;try{const o=await this.request(`/repos/${i}/${t}`);return o.fork===!0&&o.parent&&o.parent.full_name===`${e}/${t}`}catch(o){return o?.status===404||console.warn("[GitHubClientTS] Error checking for existing fork:",o?.message||o),!1}}}(()=>{try{const n=window.GitHubClient,e=new Gt;window.GitHubClientTS=e,window.GitHubClient=e,console.debug("[GitHubClientTS] Initialized (legacy existing:",!!n,")")}catch(n){console.error("[GitHubClientTS] Failed to initialize",n)}})();function Be(n,e={}){const t=`[Policy] ${n.description}`;let i=[];switch(n.rule){case"defaultBranch":i=["Rename the current default branch to main (or create main & move history).","Update all workflow / README / script references from old name to main.","Set main as the default branch in repository settings."];break;case"requiredFile":i=[`Add the missing file ${n.filePath||""} with appropriate content.`,"Commit & push to default branch.","Ensure any referenced docs / workflows resolve correctly."];break;case"requiredFolder":i=[`Create the folder ${n.filePath||""} and populate required files.`,"Follow project conventions (naming, casing, structure)."];break;case"bicepFilesPresent":i=["Add at least one infrastructure .bicep file under infra/.","Model required Azure resources adhering to naming & security guidelines."];break;case"bicepResource":i=[`Add the missing resource to the relevant .bicep file (${n.filePath||"infra/"})`,"Validate with bicep build / az deployment what-if."];break;case"azureYamlFile":i=["Create azure.yaml (or azure.yml) at repository root.","Define services and required pipeline metadata."];break;case"azureYamlServices":i=["Add a top-level services: section enumerating deployable components.","Ensure each service subpath matches actual infra/app code."];break;case"readmeMissingHeading":i=["Add the missing README heading (level H2).","Match heading text exactly to project guidance."];break;case"readmeMissingArchitectureDiagramHeading":i=["Add an Architecture (H2) section to the README.","Position it before deployment / operations sections."];break;case"readmeMissingArchitectureDiagramImage":i=["Insert an architecture diagram image in the Architecture section.","Provide descriptive alt text explaining key components."];break;default:i=["Update repository code/configuration to satisfy this rule.","Replace any outdated references.","Ensure all affected files are updated."]}const o=`
## Rule violated
${n.description}

## Why this matters
This rule is part of the repository governance policy to ensure consistency, security, and maintainability.

## Current state
${n.currentValue?`- ${n.currentValue}`:"Detected state does not match policy."}${n.filePath?`

\`\`\`
${n.filePath}
${(n.snippet||"").trim()}
\`\`\``:""}

## Expected state
${n.expectedValue||"Repository should comply with the rule requirements."}

## Required fix
${i.map((s,a)=>`${a+1}. ${s}`).join(`
`)}

## Acceptance criteria
- The repository satisfies the rule.
- All workflows/docs/scripts reflect the corrected configuration.
- No analyzer findings for this rule after re-run.
${typeof e.compliancePercentage=="number"?`- Overall compliance improves above current ${e.compliancePercentage}%.
`:""}${e.mainIssueAnchor?`
> Tracking: ${e.mainIssueAnchor}
`:""}`;return{title:t,body:o}}function Pe(n){if(!n||!n.id)return;const e=n.id,t=n.message||n.error||"Policy violation";let i={rule:"policy",description:t};if(e.startsWith("missing-")&&!e.startsWith("missing-workflow-")&&!e.startsWith("missing-folder-")){const o=e.replace("missing-","");i={rule:"requiredFile",description:t,currentValue:`File ${o} absent`,expectedValue:`File ${o} present with correct content`,filePath:o}}else if(e.startsWith("missing-workflow-"))i={rule:"requiredWorkflowFile",description:t,currentValue:"Workflow file absent",expectedValue:"Required GitHub Actions workflow exists under .github/workflows/"};else if(e.startsWith("missing-folder-")){const o=e.replace("missing-folder-","");i={rule:"requiredFolder",description:t,currentValue:`Folder ${o}/ absent`,expectedValue:`Folder ${o}/ exists with expected structure`,filePath:o+"/"}}else if(e==="missing-bicep")i={rule:"bicepFilesPresent",description:t,currentValue:"No .bicep files in infra/",expectedValue:"At least one infrastructure .bicep file in infra/"};else if(e.startsWith("bicep-missing-")){const o=e.replace("bicep-missing-","");i={rule:"bicepResource",description:t,currentValue:`Resource ${o} not declared`,expectedValue:`Resource ${o} declared in appropriate .bicep file`}}else if(e==="missing-azure-yaml")i={rule:"azureYamlFile",description:t,currentValue:"azure.yaml not present",expectedValue:"azure.yaml present at repository root"};else if(e==="azure-yaml-missing-services")i={rule:"azureYamlServices",description:t,currentValue:"No services: section",expectedValue:"services: section lists deployable components"};else if(e.startsWith("readme-missing-heading-"))i={rule:"readmeMissingHeading",description:t,currentValue:"README missing required heading",expectedValue:"README contains required heading with appropriate content",filePath:"README.md"};else if(e==="readme-missing-architecture-diagram-heading")i={rule:"readmeMissingArchitectureDiagramHeading",description:t,currentValue:"Architecture section heading missing",expectedValue:"Architecture (H2) heading present",filePath:"README.md"};else if(e==="readme-missing-architecture-diagram-image")i={rule:"readmeMissingArchitectureDiagramImage",description:t,currentValue:"Architecture section lacks diagram image",expectedValue:"Architecture section includes a diagram image with alt text",filePath:"README.md"};else if(e.startsWith("default-branch-not-")){const o=e.replace("default-branch-not-","");i={rule:"defaultBranch",description:t,currentValue:n.error||"Default branch differs",expectedValue:`Default branch set to '${o}'`}}return i}class je{async getConfig(){const e=await fetch("./configs/docs-config.json");if(!e.ok)throw new Error(`Failed to load docs config: ${e.status}`);const t=await e.json();return t.requiredWorkflowFiles&&(t.requiredWorkflowFiles=t.requiredWorkflowFiles.map(i=>({pattern:new RegExp(i.pattern,"i"),message:i.message}))),t}evaluateDefaultBranchRule(e,t,i,o,s){const a=e?.githubRepositoryConfiguration?.defaultBranch?.mustBe;if(!a)return;const r=c=>String(c).trim();r(i)!==r(a)?o.push({id:`default-branch-not-${a}`,severity:"error",message:`Default branch must be '${a}'. Current default branch is '${i}'.`,error:`Default branch is '${i}', expected '${a}'`}):s.push({id:`default-branch-is-${a}`,category:"branch",message:`Default branch is '${a}'`,details:{defaultBranch:i}})}validateRepoConfiguration(e,t,i,o,s,a){try{this.evaluateDefaultBranchRule(e,t,i,s,a)}catch(r){console.error("Error validating repository configuration:",r),s.push({id:"repo-configuration-validation-failed",severity:"warning",message:"Repository configuration validation failed",error:r?.message||String(r)})}}}class jt{constructor(){this.githubClient=window.GitHubClient,this.ruleSetConfigs={dod:{},partner:{},docs:[],custom:{}},this.loadRuleSetConfigs(),this.debug=(e,t,i)=>{window.debug?window.debug(e,t,i):console.log(`[${e}] ${t}`,i||"")}}async loadRuleSetConfigs(){try{const e=await fetch("./configs/dod-config.json");if(!e.ok)throw new Error(`Failed to load DoD config: ${e.status}`);this.ruleSetConfigs.dod=await e.json(),this.ruleSetConfigs.dod.requiredWorkflowFiles&&(this.ruleSetConfigs.dod.requiredWorkflowFiles=this.ruleSetConfigs.dod.requiredWorkflowFiles.map(o=>({pattern:new RegExp(o.pattern,"i"),message:o.message})));const t=await fetch("./configs/partner-config.json");if(!t.ok)throw new Error(`Failed to load Partner config: ${t.status}`);this.ruleSetConfigs.partner=await t.json(),this.ruleSetConfigs.partner.requiredWorkflowFiles&&(this.ruleSetConfigs.partner.requiredWorkflowFiles=this.ruleSetConfigs.partner.requiredWorkflowFiles.map(o=>({pattern:new RegExp(o.pattern,"i"),message:o.message}))),this.ruleSetConfigs.docs=await je.prototype.getConfig();const i=await fetch("./configs/custom-config.json");if(!i.ok)throw new Error(`Failed to load Custom config: ${i.status}`);this.ruleSetConfigs.custom=await i.json(),this.ruleSetConfigs.custom.requiredWorkflowFiles&&(this.ruleSetConfigs.custom.requiredWorkflowFiles=this.ruleSetConfigs.custom.requiredWorkflowFiles.map(o=>({pattern:new RegExp(o.pattern,"i"),message:o.message}))),console.log("Rule set configurations loaded")}catch(e){console.error("Failed to load rule set configurations:",e),this.ruleSetConfigs.dod={requiredFiles:["README.md","azure.yaml","LICENSE"],requiredFolders:["infra",".github"],requiredWorkflowFiles:[{pattern:/\.github\/workflows\/azure-dev\.yml/i,message:"Missing required GitHub workflow: azure-dev.yml"}],readmeRequirements:{requiredHeadings:["Prerequisites","Getting Started"],architectureDiagram:{heading:"Architecture",requiresImage:!0}}},this.ruleSetConfigs.partner={...this.ruleSetConfigs.dod,requiredFiles:["README.md","azure.yaml"]},this.ruleSetConfigs.custom={requiredFiles:["README.md","azure.yaml"],requiredFolders:["infra"]}}}getConfig(e="dod"){if(!e||e==="dod"){const t=window.TemplateDoctorConfig||{};t.defaultRuleSet&&typeof t.defaultRuleSet=="string"&&(e=t.defaultRuleSet)}switch(e){case"partner":return this.ruleSetConfigs.partner;case"custom":return this.ruleSetConfigs.custom;case"docs":return this.ruleSetConfigs.docs;case"dod":default:return this.ruleSetConfigs.dod}}extractRepoInfo(e){const t=e.match(/github\.com\/([^/]+)\/([^/]+)(\.git)?/);if(!t)throw new Error("Invalid GitHub URL");return{owner:t[1],repo:t[2],fullName:`${t[1]}/${t[2]}`}}parseMarkdownHeadings(e){const t=[],i=/^(#{1,6})\s+(.+)$/gm;let o;for(;(o=i.exec(e))!==null;){const s=o[1].length,a=o[2].trim(),r=e.substring(o.index+o[0].length),c=/^\s*!\[.*?\]\(.*?\)/m.test(r.split(`
`).slice(0,5).join(`
`));t.push({level:s,text:a,hasImage:c})}return t}checkReadmeRequirements(e,t,i,o){const s=this.parseMarkdownHeadings(e),a=e.split(`
`).slice(0,80).join(`
`);if(o.readmeRequirements?.requiredHeadings)for(const r of o.readmeRequirements.requiredHeadings){const c=s.find(l=>l.level===2&&l.text.toLowerCase()===r.toLowerCase());c?i.push({id:`readme-heading-${r.toLowerCase().replace(/\s+/g,"-")}`,category:"readmeHeading",message:`README.md contains required h2 heading: ${r}`,details:{heading:r,level:c.level}}):t.push({id:`readme-missing-heading-${r.toLowerCase().replace(/\s+/g,"-")}`,severity:"error",message:`README.md is missing required h2 heading: ${r}`,error:`README.md does not contain required h2 heading: ${r}`,filePath:"README.md",snippet:a})}if(o.readmeRequirements?.architectureDiagram){const{heading:r,requiresImage:c}=o.readmeRequirements.architectureDiagram,l=s.find(d=>d.level===2&&d.text.toLowerCase()===r.toLowerCase());l?(i.push({id:"readme-architecture-diagram-heading",category:"readmeHeading",message:`README.md contains required h2 heading: ${r}`,details:{heading:r,level:l.level}}),c&&!l.hasImage?t.push({id:"readme-missing-architecture-diagram-image",severity:"error",message:"Architecture Diagram section does not contain an image",error:"README.md has Architecture Diagram heading but is missing an image",filePath:"README.md",snippet:a}):c&&l.hasImage&&i.push({id:"readme-architecture-diagram-image",category:"readmeImage",message:"Architecture Diagram section contains an image",details:{heading:r}})):t.push({id:"readme-missing-architecture-diagram-heading",severity:"error",message:`README.md is missing required h2 heading: ${r}`,error:`README.md does not contain required h2 heading: ${r}`,filePath:"README.md",snippet:a})}}async analyzeTemplate(e,t="dod"){if(!t||t==="dod"){const c=window.TemplateDoctorConfig||{};c.defaultRuleSet&&typeof c.defaultRuleSet=="string"&&(t=c.defaultRuleSet)}const i=window.TemplateDoctorConfig||{};if(i.preferServerSideAnalysis===!0||i.analysis?.useServerSide===!0)try{const c=await this.analyzeTemplateServerSide(e,t);return window.TemplateDoctorRuntime=Object.assign({},window.TemplateDoctorRuntime,{lastMode:"server",lastServerAttemptFailed:!1,fallbackUsed:!1}),document.dispatchEvent(new CustomEvent("analysis-mode-changed")),c}catch(c){throw console.error("[analyzer] Server-side analysis failed",c),window.TemplateDoctorRuntime=Object.assign({},window.TemplateDoctorRuntime,{lastMode:"server-failed",lastServerAttemptFailed:!0}),document.dispatchEvent(new CustomEvent("analysis-mode-changed")),c instanceof Error?c:new Error(String(c))}window.TemplateDoctorRuntime=Object.assign({},window.TemplateDoctorRuntime,{lastMode:"client",fallbackUsed:!1}),document.dispatchEvent(new CustomEvent("analysis-mode-changed"));const s=this.getConfig(t),a=this.extractRepoInfo(e);let r=null;if(t==="custom")try{const c=localStorage.getItem("td_custom_ruleset");c&&(r=JSON.parse(c))}catch(c){console.error("Error loading custom configuration:",c)}this.debug("analyzer",`Analyzing repository ${a.fullName} with rule set: ${t}`);try{const c=await this.githubClient.getDefaultBranch(a.owner,a.repo),l=await this.githubClient.listAllFiles(a.owner,a.repo,c),d=[],u=[];t==="docs"&&je.prototype.validateRepoConfiguration(s,a,c,l,d,u);const f=l.map(m=>m.toLowerCase());for(const m of s.requiredFiles)f.includes(m.toLowerCase())?u.push({id:`file-${m}`,category:"requiredFile",message:`Required file found: ${m}`,details:{fileName:m}}):d.push({id:`missing-${m}`,severity:"error",message:`Missing required file: ${m}`,error:`File ${m} not found in repository`});if(s.requiredWorkflowFiles)for(const m of s.requiredWorkflowFiles){const y=f.find($=>m.pattern.test($));y?u.push({id:`workflow-${y}`,category:"requiredWorkflow",message:`Required workflow file found: ${y}`,details:{fileName:y,patternMatched:m.pattern.source}}):d.push({id:`missing-workflow-${m.pattern.source}`,severity:"error",message:m.message,error:m.message})}for(const m of s.requiredFolders)if(!f.some(y=>y.startsWith(m.toLowerCase()+"/")))d.push({id:`missing-folder-${m}`,severity:"error",message:`Missing required folder: ${m}/`,error:`Folder ${m} not found in repository`});else{const y=f.filter($=>$.startsWith(m.toLowerCase()+"/"));u.push({id:`folder-${m}`,category:"requiredFolder",message:`Required folder found: ${m}/`,details:{folderPath:m,fileCount:y.length}})}if(s.readmeRequirements&&f.some(m=>m==="readme.md"))try{const m=await this.githubClient.getFileContent(a.owner,a.repo,"README.md");this.checkReadmeRequirements(m,d,u,s)}catch(m){d.push({id:"readme-read-error",severity:"warning",message:"Could not read README.md",error:m instanceof Error?m.message:String(m)})}const p=l.filter(m=>m.startsWith("infra/")&&m.endsWith(".bicep"));if(p.length===0)d.push({id:"missing-bicep",severity:"error",message:"No Bicep files found in infra/",error:"No Bicep files found in the infra/ directory"});else{u.push({id:"bicep-files-exist",category:"bicepFiles",message:`Bicep files found in infra/ directory: ${p.length} files`,details:{count:p.length,files:p}});for(const m of p)try{const y=await this.githubClient.getFileContent(a.owner,a.repo,m);for(const $ of s.bicepChecks.requiredResources)y.includes($)?u.push({id:`bicep-resource-${$.toLowerCase()}-${m}`,category:"bicepResource",message:`Found required resource "${$}" in ${m}`,details:{resource:$,file:m}}):d.push({id:`bicep-missing-${$.toLowerCase()}`,severity:"error",message:`Missing resource "${$}" in ${m}`,error:`File ${m} does not contain required resource ${$}`});this.analyzeAuthenticationMethods(y,m,d,u)}catch(y){console.error(`Failed to read Bicep file: ${m}`),d.push({id:`error-reading-${m}`,severity:"warning",message:`Failed to read ${m}`,error:y instanceof Error?y.message:String(y)})}}const h=l.find(m=>m==="azure.yaml"||m==="azure.yml");if(h){u.push({id:"azure-yaml-exists",category:"azureYaml",message:`Found azure.yaml file: ${h}`,details:{fileName:h}});try{const m=await this.githubClient.getFileContent(a.owner,a.repo,h),y=m.split(`
`).slice(0,120).join(`
`);s.azureYamlRules?.mustDefineServices&&!/services\s*:/i.test(m)?d.push({id:"azure-yaml-missing-services",severity:"error",message:`No "services:" defined in ${h}`,error:`File ${h} does not define required "services:" section`,filePath:h,snippet:y}):s.azureYamlRules?.mustDefineServices&&u.push({id:"azure-yaml-services-defined",category:"azureYaml",message:`"services:" section found in ${h}`,details:{fileName:h}})}catch{d.push({id:"azure-yaml-read-error",severity:"warning",message:`Could not read ${h}`,error:`Failed to read file ${h}`})}}else d.push({id:"missing-azure-yaml",severity:"error",message:"Missing azure.yaml or azure.yml file",error:"No azure.yaml or azure.yml file found in repository"});for(const m of d)if(m.id&&m.id.startsWith("bicep-missing-")&&!m.snippet&&m.message&&m.message.includes(" in ")){const y=m.message.split(" in ").pop();if(y&&/\.bicep$/i.test(y))try{const $=await this.githubClient.getFileContent(a.owner,a.repo,y);m.filePath=y,m.snippet=$.split(`
`).slice(0,160).join(`
`)}catch{}}const g=d.length===0?"No issues found 🎉":"Issues found",w=d.length+u.length,b=w>0?Math.round(u.length/w*100):0;u.push({id:"compliance-summary",category:"meta",message:`Compliance: ${b}%`,details:{issueCount:d.length,compliantCount:u.length,totalChecks:w,percentageCompliant:b}});const v=d.map(m=>{try{const y=Pe(m);y&&(m.filePath&&!y.filePath&&(y.filePath=m.filePath),m.snippet&&!y.snippet&&(y.snippet=m.snippet),m.issueTemplate=Be(y,{compliancePercentage:b}))}catch{}return m}),T={repoUrl:e,ruleSet:t,timestamp:new Date().toISOString(),compliance:{issues:v,compliant:u,summary:`${g} - Compliance: ${b}%`}};return t==="custom"&&r&&(T.customConfig={gistUrl:r.gistUrl||null}),T}catch(c){throw console.error("Error analyzing template:",c),new Error(`Failed to analyze repository: ${c.message}`)}}async analyzeTemplateServerSide(e,t){this.debug("analyzer",`Using server-side analysis for ${e} with ruleset: ${t}`);try{let i=null;if(t==="custom")try{const u=localStorage.getItem("td_custom_ruleset");u&&(i=JSON.parse(u))}catch(u){console.error("Error loading custom configuration:",u)}const o={repoUrl:e,ruleSet:t,...i?{customConfig:i}:{}},s=window.TemplateDoctorConfig||{},a=s.apiBase||window.location.origin,r=window.ApiRoutes?window.ApiRoutes.build("analyze-template"):`${a.replace(/\/$/,"")}/api/v4/analyze-template`,c={"Content-Type":"application/json"};if(s.functionKey&&(c["x-functions-key"]=s.functionKey),window.GitHubClient&&window.GitHubClient.auth&&window.GitHubClient.auth.isAuthenticated()){const u=window.GitHubClient.auth.getToken();u&&(c.Authorization=`Bearer ${u}`)}const l=await fetch(r,{method:"POST",headers:c,body:JSON.stringify(o)});if(!l.ok){const u=await l.text();if(/saml/i.test(u)||/sso/i.test(u)||l.status===403)try{document.dispatchEvent(new CustomEvent("analysis-saml-blocked",{detail:{repoUrl:e,status:l.status,body:u}}))}catch{}throw new Error(`Server-side analysis failed: ${l.status} ${l.statusText} - ${u}`)}const d=await l.json();return d.timestamp||(d.timestamp=new Date().toISOString()),d}catch(i){throw console.error("Error in server-side analysis:",i),new Error(`Server-side analysis failed: ${i.message}`)}}evaluateDefaultBranchRule(e,t,i,o,s){const a=e?.githubRepositoryConfiguration?.defaultBranch?.mustBe;if(!a)return;const r=c=>String(c).trim();r(i)!==r(a)?o.push({id:`default-branch-not-${a}`,severity:"error",message:`Default branch must be '${a}'. Current default branch is '${i}'.`,error:`Default branch is '${i}', expected '${a}'`}):s.push({id:`default-branch-is-${a}`,category:"branch",message:`Default branch is '${a}'`,details:{defaultBranch:i}})}analyzeAuthenticationMethods(e,t,i,o){const a=this.getConfig().bicepChecks?.securityBestPractices;if(!a)return;const r=this.checkForManagedIdentity(e),c=this.detectAuthenticationMethods(e);if(r&&o.push({id:`bicep-uses-managed-identity-${t}`,category:"bicepSecurity",message:`Good practice: ${t} uses Managed Identity for Azure authentication`,details:{file:t,authMethod:"ManagedIdentity"}}),a.detectInsecureAuth&&c.length>0){const l=c.join(", ");i.push({id:`bicep-alternative-auth-${t}`,severity:"warning",message:`Security recommendation: Replace ${l} with Managed Identity in ${t}`,error:`File ${t} uses ${l} for authentication instead of Managed Identity`,recommendation:`Consider replacing ${l} with Managed Identity for better security.`})}if(a.checkAnonymousAccess&&!r&&c.length===0){const l=this.detectResourcesRequiringAuth(e);if(l.length>0){const d=l.join(", ");i.push({id:`bicep-missing-auth-${t}`,severity:"warning",message:`Security recommendation: Add Managed Identity for ${d} in ${t}`,error:`File ${t} may have resources (${d}) with anonymous access or missing authentication`,recommendation:"Configure Managed Identity for secure access to these resources."})}}}checkForManagedIdentity(e){return[/identity:\s*\{\s*type:\s*['"]SystemAssigned['"]/i,/identity:\s*\{\s*type:\s*['"]UserAssigned['"]/i,/identity:\s*\{\s*type:\s*['"]SystemAssigned,UserAssigned['"]/i,/['"]identity['"]\s*:\s*\{\s*['"]type['"]\s*:\s*['"]SystemAssigned['"]/i,/['"]identity['"]\s*:\s*\{\s*['"]type['"]\s*:\s*['"]UserAssigned['"]/i,/['"]identity['"]\s*:\s*\{\s*['"]type['"]\s*:\s*['"]SystemAssigned,UserAssigned['"]/i,/managedIdentities:\s*\{\s*systemAssigned:\s*true/i,/managedIdentities:\s*\{\s*userAssignedResourceIds:/i].some(i=>i.test(e))}detectAuthenticationMethods(e){const t=[];(/connectionString/i.test(e)||/['"]ConnectionString['"]/i.test(e))&&t.push("Connection String"),(/accessKey/i.test(e)||/['"]accessKey['"]/i.test(e)||/primaryKey/i.test(e)||/['"]primaryKey['"]/i.test(e)||/secondaryKey/i.test(e)||/['"]secondaryKey['"]/i.test(e))&&t.push("Access Key");const i=e.match(/resource\s+\w+\s+'[^']*'\s*{[^}]*}/gis)||[];let o=!1;for(const s of i)if((/keyVault.*\/secrets\//i.test(s)||/['"]secretUri['"]/i.test(s))&&!/identity\s*:/i.test(s)&&!/identity\s*{/i.test(s)){o=!0;break}return o&&t.push("KeyVault Secret without Managed Identity"),(/sasToken/i.test(e)||/['"]sasToken['"]/i.test(e)||/sharedAccessSignature/i.test(e)||/SharedAccessKey/i.test(e))&&t.push("SAS Token"),(/storageAccountKey/i.test(e)||/['"]storageAccountKey['"]/i.test(e))&&t.push("Storage Account Key"),(/AccountKey=/i.test(e)||/Password=/i.test(e)||/UserName=/i.test(e)||/AccountEndpoint=/i.test(e))&&t.push("Connection String with credentials"),t}detectResourcesRequiringAuth(e){const t=[],i=[{pattern:/Microsoft\.Storage\/storageAccounts/i,name:"Storage Account"},{pattern:/Microsoft\.KeyVault\/vaults/i,name:"Key Vault"},{pattern:/Microsoft\.DocumentDB\/databaseAccounts/i,name:"Cosmos DB"},{pattern:/Microsoft\.Sql\/servers/i,name:"SQL Server"},{pattern:/Microsoft\.Web\/sites/i,name:"App Service"},{pattern:/Microsoft\.ContainerRegistry\/registries/i,name:"Container Registry"},{pattern:/Microsoft\.ServiceBus\/namespaces/i,name:"Service Bus"},{pattern:/Microsoft\.EventHub\/namespaces/i,name:"Event Hub"},{pattern:/Microsoft\.ApiManagement\/service/i,name:"API Management"},{pattern:/Microsoft\.CognitiveServices\/accounts/i,name:"Cognitive Services"},{pattern:/Microsoft\.ContainerService\/managedClusters/i,name:"AKS Cluster"},{pattern:/Microsoft\.Cache\/Redis/i,name:"Redis Cache"},{pattern:/Microsoft\.Search\/searchServices/i,name:"Search Service"},{pattern:/Microsoft\.OperationalInsights\/workspaces/i,name:"Log Analytics"}];for(const{pattern:o,name:s}of i)o.test(e)&&t.push(s);return t}validateRepoConfiguration(e,t,i,o,s){try{this.evaluateDefaultBranchRule(e,t,i,o,s)}catch(a){console.error("Error validating repository configuration:",a),o.push({id:"repo-configuration-validation-failed",severity:"warning",message:"Repository configuration validation failed",error:a instanceof Error?a.message:String(a)})}}}window.TemplateAnalyzer||(window.TemplateAnalyzer=new jt,console.log("[TemplateAnalyzer] Created early instance (GitHubClient may attach later)"),document.dispatchEvent(new CustomEvent("template-analyzer-ready")));function Se(){const n=window.TemplateAnalyzer,e=window.GitHubClient;return n&&e&&n.githubClient!==e?(n.githubClient=e,console.log("[TemplateAnalyzer] GitHub client attached"),!0):!1}if(!Se()){let n=0;const e=10,t=setInterval(()=>{n++,(Se()||n>=e)&&clearInterval(t)},500)}document.addEventListener("github-auth-changed",()=>{Se()});window.checkAnalyzerReady=function(){return!!window.TemplateAnalyzer};function B(n){return document.getElementById(n)}function P(n,e){n&&(n.style.display=e)}function oe(n,e,t,i){const o=window.NotificationSystem;if(!o)return;const s=n==="info"?o.showInfo:n==="success"?o.showSuccess:n==="error"?o.showError:o.showWarning;try{s(e,t,i)}catch{}}async function Vt(n,e="dod"){if(!n){console.error("[bridge] analyzeRepo missing repoUrl");return}const t=window.TemplateDoctorConfig||{};if((!e||e==="dod")&&typeof t.defaultRuleSet=="string"&&(e=t.defaultRuleSet),e==="show-modal"){const p=window.showRuleSetModal||window.RulesetModal?.show;typeof p=="function"?p(n):console.warn("[bridge] ruleset modal not available");return}const i=B("search-section");let o=B("analysis-section"),s=B("results-container"),a=B("loading-container");const r=B("error-section"),c=B("error-message");if(!o){const p=document.createElement("section");p.id="analysis-section",p.className="analysis-section",p.innerHTML=`
      <div class="analysis-header">
        <button id="back-button" class="back-button"><i class="fas fa-arrow-left"></i> Back to Search</button>
        <div class="repo-info"><h3 id="repo-name">Repository Name</h3><span id="repo-url">Repository URL</span></div>
      </div>
      <div class="loading-container" id="loading-container" style="display:none">
        <div class="loading-spinner"></div>
        <p>Analyzing repository... This may take a moment.</p>
      </div>
      <div id="results-container" class="results-container" style="display:none"></div>
    `;const h=document.querySelector("footer, .site-footer");h?.parentNode?h.parentNode.insertBefore(p,h):document.body.appendChild(p),o=p,s=B("results-container"),a=B("loading-container"),console.debug("[bridge] dynamically created #analysis-section")}const l=window.GitHubAuth;if(l&&typeof l.isAuthenticated=="function"&&!l.isAuthenticated()){oe("warning","Login Required","Please login with GitHub before analyzing a repository.",4e3),P(o,"none");return}if(o)try{o.setAttribute("data-auth-ready","true")}catch{}P(i,"none"),P(o,"block"),P(s,"none"),P(a,"flex"),P(r,"none");const d=n.split("github.com/")[1]||n,u=B("repo-name");u&&(u.textContent=d);const f=B("repo-url");f&&(f.textContent=n),oe("info","Analysis Started",`Analyzing ${d} (${e})`,2500);try{const p=window.TemplateAnalyzer,h=window.DashboardRenderer;if(!p||!h)throw new Error("Core services not initialized");const g=await p.analyzeTemplate(n,e);if(P(a,"none"),s){P(s,"block");try{h.render(g,s)}catch(w){console.error("[bridge] dashboard render failed",w)}}return oe("success","Analysis Complete",d,4e3),g}catch(p){throw console.error("[bridge] analyzeRepo failed",p),P(a,"none"),r&&c&&(P(r,"block"),c.textContent=p?.message||"Analysis failed"),oe("error","Analysis Failed",p?.message||"Unknown error",6e3),p}}(!window.analyzeRepo||window.analyzeRepo.__legacy)&&(window.analyzeRepo=Vt,window.analyzeRepo.__bridge=!0,document.dispatchEvent(new CustomEvent("analyze-repo-ready")),console.debug("[bridge] analyzeRepo bridge installed"));const C={attempted:!1,loaded:!1,authenticatedAtLoad:!1,dispatched:!1};let Ve=0;const Wt=50;function x(...n){console.log("[TemplateDataLoader]",...n)}function j(){if(!C.dispatched){C.dispatched=!0,x("Dispatching template-data-loaded event. State snapshot:",JSON.stringify({attempted:C.attempted,loaded:C.loaded,authenticatedAtLoad:C.authenticatedAtLoad,dataLength:Array.isArray(window.templatesData)?window.templatesData.length:"n/a"}));try{document.dispatchEvent(new CustomEvent("template-data-loaded"))}catch(n){console.warn("[TemplateDataLoader] Failed to dispatch template-data-loaded event",n)}}}function J(n=!0){Array.isArray(window.templatesData)||(window.templatesData=[]),n&&(C.loaded=!0)}function Jt(){x("index-data.js loaded"),Array.isArray(window.templatesData)||x("window.templatesData missing or not an array after script load; initializing to []"),J(),j()}function We(n){x("Failed to load index-data.js (non-fatal)",n?.message||n),J(),j()}function pe(){if(C.attempted){x("injectScript called but already attempted; skipping"),C.dispatched||j();return}if(C.attempted=!0,C.authenticatedAtLoad=!!(window.GitHubAuth&&window.GitHubAuth.isAuthenticated?.()),/[?&]forceResults=1/.test(window.location.search)&&(x("forceResults=1 detected in query string; bypassing auth requirement"),C.authenticatedAtLoad=!0),!C.authenticatedAtLoad){x("Not authenticated at load attempt; setting placeholder templatesData (will retry after login)"),J(!1),j();return}x("Authenticated at load; proceeding to inject results script");try{const e=document.createElement("script");e.src="results/index-data.js",e.async=!0,e.onload=()=>Jt(),e.onerror=t=>We(t),C.loadingScriptTag=e,document.head.appendChild(e),x("Injected script tag for results/index-data.js")}catch(e){We(e)}}function Kt(){C.loaded||C.attempted||pe()}function nt(){C.loadingScriptTag&&C.loadingScriptTag.parentNode&&C.loadingScriptTag.parentNode.removeChild(C.loadingScriptTag),C.attempted=!1,C.loaded=!1,C.authenticatedAtLoad=!1,C.loadingScriptTag=null,C.dispatched=!1,pe()}function Ee(){if(window.GitHubAuth&&window.GitHubAuth.isAuthenticated)if(window.GitHubAuth.isAuthenticated()){x("Auth ready & authenticated; proceeding to load results"),pe();return}else{x("Auth ready but user not authenticated yet; setting empty list & dispatching"),J(),j();return}if(Ve++,Ve>=Wt){x("Auth object not detected after polling; proceeding with empty data"),J(),j();return}setTimeout(Ee,100)}document.addEventListener("auth-state-changed",n=>{try{const e=!!n?.detail?.authenticated;if(x("auth-state-changed event received",e,"current state:",{...C}),e){if(C.attempted&&!C.authenticatedAtLoad&&C.loaded&&(x("Adjusting legacy state: was marked loaded while unauthenticated; resetting for retry"),C.loaded=!1),!C.attempted||!C.authenticatedAtLoad){x("Attempting to (re)load results after authentication"),C.attempted=!1,C.authenticatedAtLoad=!1,pe();return}!C.loaded&&C.attempted&&C.authenticatedAtLoad&&(x("State indicates attempt made while authenticated but not loaded; forcing reload"),nt())}else C.loaded||(J(!1),j())}catch(e){x("Error handling auth-state-changed",e)}});window.TemplateDataLoader={loadIfNeeded:Kt,forceReload:nt,isLoaded:()=>C.loaded,_state:()=>({attempted:C.attempted,loaded:C.loaded,authenticatedAtLoad:C.authenticatedAtLoad})};document.readyState==="complete"||document.readyState==="interactive"?queueMicrotask(Ee):document.addEventListener("DOMContentLoaded",()=>Ee());console.log("Loading report-loader.ts");(function(){if(window.ReportLoader!==void 0){console.log("ReportLoader already exists, skipping");return}function n(){this.debug=function(e,t){typeof window.debug=="function"?window.debug("report-loader",e,t):console.log(`[ReportLoader] ${e}`,t!==void 0?t:"")},this.loadReport=async function(e,t={}){this.debug("loadReport called",{repoUrl:e,options:t});try{if(!e)throw new Error("Repository URL is required");const i=document.getElementById("report");if(!i)return this.debug("Report container not found"),{success:!1,error:"Report container not found"};i.innerHTML='<div class="loading-message">Loading report...</div>';const o=await this.fetchReportData(e,t);return o?(window.reportDataOriginal=o,window.DashboardRenderer?(window.DashboardRenderer.render(o,i),{success:!0,data:o}):(i.innerHTML='<div class="error-message">Dashboard renderer not available</div>',{success:!1,error:"Dashboard renderer not available"})):(i.innerHTML='<div class="error-message">No report data available</div>',{success:!1,error:"No data"})}catch(i){console.error("Error loading report:",i);const o=document.getElementById("report");return o&&(o.innerHTML=`<div class="error-message">Error loading report: ${i.message}</div>`),{success:!1,error:i.message}}},this.fetchReportData=async function(e,t={}){this.debug("fetchReportData called",{repoUrl:e,options:t});try{const o=String(e).replace(/\.git$/,"").toLowerCase(),s=window.__dynamicReports;if(s&&s[o])return this.debug("Serving report from dynamic cache"),s[o]}catch{}const i=[this.tryLatestJson.bind(this),this.tryTimestampedJson.bind(this),this.tryEmbeddedScript.bind(this),this.tryDashboardHtml.bind(this)];for(const o of i)try{const s=await o(e,t);if(s)return this.debug("Data loaded via strategy",o.name),s}catch(s){this.debug("Strategy failed",{name:o.name,error:s.message})}return this.debug("All strategies failed"),null},this.tryLatestJson=async function(e){try{const t=this.getResultsFolderForRepo(e);if(!t)return null;const i=`/results/${t}/latest.json`;this.debug("Trying latest.json",i);const o=await fetch(i,{cache:"no-store"});if(!o.ok)throw new Error(`HTTP ${o.status}`);const s=await o.json();return!s||typeof s!="object"?null:(s.analyzerVersion||(s.analyzerVersion="unknown"),s)}catch(t){return this.debug("tryLatestJson failed",t.message),null}},this.tryDashboardHtml=async function(e){try{if(!this.getResultsFolderForRepo(e))return null;if(Array.isArray(window.templatesData)){const i=window.templatesData.find(o=>(o.repoUrl||"").replace(/\.git$/,"").toLowerCase()===e.replace(/\.git$/,"").toLowerCase());if(i&&i.dashboardPath){const o=await fetch(`/results/${i.relativePath}`,{cache:"no-store"});if(o.ok)return{rawHtml:(await o.text()).replace(/<script[\s\S]*?>[\s\S]*?<\/script>/gi,"<!-- stripped script -->"),repoUrl:e,analyzerVersion:"embedded-html"}}}}catch{}return null},this.tryTimestampedJson=async function(e){try{const t=this.getResultsFolderForRepo(e);if(!t)return null;const i=`/results/${t}`;this.debug("Trying timestamped JSON in folder",i);const o=await fetch(i,{cache:"no-store"});if(!o.ok)throw new Error(`HTTP ${o.status}`);const a=[...(await o.text()).matchAll(/href="(\d{4}-\d{2}-\d{2}T\d{6}Z\.json)"/g)];if(a.length===0)return null;a.sort((r,c)=>c[1].localeCompare(r[1]));for(const r of a){const c=r[1];try{const l=`${i}/${c}`,d=await fetch(l,{cache:"no-store"});if(!d.ok)continue;const u=await d.json();if(u&&typeof u=="object")return u.analyzerVersion||(u.analyzerVersion="unknown"),u}catch{}}return null}catch(t){return this.debug("tryTimestampedJson failed",t.message),null}},this.tryEmbeddedScript=async function(e){try{const t=document.getElementById("report-data-script");if(!t)return null;this.debug("Trying embedded script data");const i=t.textContent||t.innerText;if(!i)return null;const o=i.indexOf("{");if(o===-1)return null;const s=i.slice(o),a=JSON.parse(s);return a.analyzerVersion||(a.analyzerVersion="unknown"),a}catch(t){return this.debug("tryEmbeddedScript failed",t.message),null}},this.getResultsFolderForRepo=function(e){if(!e)return null;try{if(Array.isArray(window.templatesData)){const o=window.templatesData.find(s=>{const a=String(s.repoUrl||"").replace(/\.git$/,"").toLowerCase(),r=String(e).replace(/\.git$/,"").toLowerCase();return a===r});if(o&&o.relativePath){const s=o.relativePath.split("/")[0];if(s)return s}}const i=new URL(e).pathname.split("/").filter(Boolean);if(i.length>=2){const o=`${i[0]}-${i[1]}`.toLowerCase();if(!window.__resultsFolderIndex)try{const s={};Array.isArray(window.templatesData)&&window.templatesData.forEach(a=>{if(a.relativePath){const r=a.relativePath.split("/")[0];if(a.repoUrl){const c=a.repoUrl.replace(/\.git$/,"").toLowerCase();s[c]||(s[c]=r)}}}),window.__resultsFolderIndex=s}catch{}try{const s=e.replace(/\.git$/,"").toLowerCase(),a=window.__resultsFolderIndex&&window.__resultsFolderIndex[s];if(a)return a.toLowerCase()}catch{}return o}}catch(t){this.debug("getResultsFolderForRepo error",t.message)}return null}}window.ReportLoader=new n})();console.log("Loading dashboard-renderer.ts - initializing renderer");document.addEventListener("DOMContentLoaded",function(){const n=document.styleSheets;console.log(`Found ${n.length} stylesheets:`);for(let t=0;t<n.length;t++)try{console.log(`  - ${n[t].href}`)}catch{console.log(`  - Unable to access stylesheet #${t}`)}let e=!1;for(let t=0;t<n.length;t++)try{if(n[t].href&&n[t].href.includes("dashboard.css")){e=!0,console.log("dashboard.css found and loaded!");break}}catch{}e||console.warn("dashboard.css not found in loaded stylesheets!")});(function(){if(window.DashboardRenderer!==void 0){console.log("DashboardRenderer already exists, skipping initialization");return}function n(){this.debug=function(e,t){typeof window.debug=="function"?window.debug("dashboard-renderer",e,t):console.log(`[DashboardRenderer] ${e}`,t!==void 0?t:"")},this.debug("Dashboard renderer initialized"),this.render=function(e,t){if(this.debug("Rendering dashboard",e),!e||!t){console.error("Missing result data or container element"),t.innerHTML=`<div style="padding: 20px; background: #f8d7da; border-radius: 5px; margin: 20px 0; color: #721c24;"><h3>Error: Cannot render dashboard</h3><p>Missing required data or container element</p><pre style="background: #f5f5f5; padding: 10px; border-radius: 3px;">${JSON.stringify({resultExists:!!e,containerExists:!!t,resultType:e?typeof e:"undefined",containerType:t?typeof t:"undefined"},null,2)}</pre></div>`;return}try{t.innerHTML="";try{window.reportDataOriginal=e}catch{}const i='<div id="action-section" class="action-footer action-header" style="background: white !important; border-radius: 5px !important; padding: 16px !important; margin-bottom: 20px !important; box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important; display: flex !important; flex-direction: column !important; justify-content: center !important; align-items: center !important; width: 100% !important;"><div style="width: 100% !important; text-align: center !important; margin-bottom: 15px !important;"><h3 style="margin: 0 !important; padding: 0 !important; font-size: 1.2rem !important; color: #333 !important;">Template Doctor Actions</h3></div><div style="display: flex !important; flex-wrap: wrap !important; justify-content: center !important; gap: 15px !important; width: 100% !important;"><a href="#" id="fixButton" class="btn" style="opacity: 1 !important; visibility: visible !important; padding: 12px 24px !important; background-color: #0078d4 !important; color: white !important; border: none !important; border-radius: 4px !important; font-size: 1rem !important; font-weight: 500 !important; cursor: pointer !important; display: inline-flex !important; align-items: center !important; gap: 8px !important; min-width: 180px !important; justify-content: center !important; text-decoration: none !important; pointer-events: auto !important;"><i class="fas fa-code"></i> Fix with AI Agent</a><button id="create-github-issue-btn" class="btn" style="opacity: 1 !important; visibility: visible !important; padding: 12px 24px !important; background-color: #2b3137 !important; color: white !important; border: none !important; border-radius: 4px !important; font-size: 1rem !important; font-weight: 500 !important; cursor: pointer !important; display: inline-flex !important; align-items: center !important; gap: 8px !important; min-width: 180px !important; justify-content: center !important; pointer-events: auto !important;"><i class="fab fa-github"></i> Create GitHub Issue</button><button id="testProvisionButton" class="btn" style="opacity: 1 !important; visibility: visible !important; padding: 12px 24px !important; background-color: #0078d4 !important; color: white !important; border: none !important; border-radius: 4px !important; font-size: 1rem !important; font-weight: 500 !important; cursor: pointer !important; display: inline-flex !important; align-items: center !important; gap: 8px !important; min-width: 180px !important; justify-content: center !important; pointer-events: auto !important;"><i class="fas fa-rocket"></i> Test AZD Provision</button><button id="save-results-btn" class="btn" title="Opens a PR in the configured repository to save this analysis report" style="opacity: 1 !important; visibility: visible !important; padding: 12px 24px !important; background-color: #198754 !important; color: white !important; border: none !important; border-radius: 4px !important; font-size: 1rem !important; font-weight: 500 !important; cursor: pointer !important; display: inline-flex !important; align-items: center !important; gap: 8px !important; min-width: 180px !important; justify-content: center !important; pointer-events: auto !important;"><i class="fas fa-save"></i> Save Results</button></div><div id="save-results-note" style="margin-top: 8px; color: #6c757d; font-size: 0.9rem; text-align: center;"></div></div>',o=document.createElement("div");o.innerHTML=i;const s=o.firstElementChild;t.appendChild(s);const a=document.createElement("div");a.className="debug-section",a.style.cssText="margin-bottom: 30px; padding: 15px; background: #f8f9fa; border-radius: 5px; border: 1px solid #ddd;",a.innerHTML=`<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;"><h3 style="margin: 0;">Template Analysis Report</h3><div style="display: flex; align-items: center; gap: 15px;"><span style="color: #6c757d; font-size: 0.9em; font-style: italic;">Developer Tools</span><button id="toggle-raw-data" class="btn" style="padding: 5px 10px; font-size: 0.9em;"><i class="fas fa-code"></i> Raw Data</button></div></div><div id="raw-data-content" style="display: none; margin-top: 15px;"><div style="background: #2d2d2d; color: #eee; padding: 10px; border-radius: 5px; font-size: 0.9em; margin-bottom: 10px;"><i class="fas fa-info-circle"></i> This is the raw report data used to generate the dashboard.</div><pre style="background: #2d2d2d; color: #eee; padding: 15px; border-radius: 5px; max-height: 400px; overflow: auto; font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 13px;">${JSON.stringify(e,null,2)}</pre></div>`,t.appendChild(a),setTimeout(()=>{const c=document.getElementById("toggle-raw-data"),l=document.getElementById("raw-data-content");c&&l&&c.addEventListener("click",function(){l.style.display==="none"?(l.style.display="block",c.innerHTML='<i class="fas fa-times"></i> Hide Raw Data',c.style.backgroundColor="#dc3545",c.style.color="white"):(l.style.display="none",c.innerHTML='<i class="fas fa-code"></i> Raw Data',c.style.backgroundColor="",c.style.color="")})},100);const r=this.adaptResultData(e);window.reportData=r,this.renderOverview(r,t),this.renderIssuesPanel(r,t),this.renderPassedPanel(r,t),this.renderActionFooter(r,t),this.addEventListeners(t)}catch(i){console.error("Error rendering dashboard:",i),t.innerHTML=`<div style="padding: 20px; background: #f8d7da; border-radius: 5px; margin: 20px 0; color: #721c24;"><h3>Dashboard Rendering Error</h3><p>${i.message}</p><pre style="background: #f5f5f5; padding: 10px; border-radius: 3px;">${i.stack}</pre><h4 style="margin-top: 20px;">Raw Data</h4><pre style="background: #f5f5f5; padding: 10px; border-radius: 3px; max-height: 300px; overflow: auto;">${JSON.stringify(e,null,2)}</pre></div>`}},this.adaptResultData=function(e){try{if(e&&e.rawHtml&&!e.compliance)return{repoUrl:e.repoUrl||window.location.href,ruleSet:e.ruleSet||"unknown",compliance:{issues:[{id:"raw-html-fallback",category:"fallback",message:"Legacy embedded HTML report – structured compliance data unavailable",error:"Rendered from historical HTML dashboard. Re-run analysis for structured data."}],compliant:[],summary:"Fallback HTML"},totalIssues:1,totalPassed:0};const t=[],i=[];Array.isArray(e.categories)&&e.categories.forEach(d=>{Array.isArray(d.checks)&&d.checks.forEach((u,f)=>{const p={id:`${d.id||d.name||"cat"}-${u.id||f}`,category:d.id||d.name||"general",message:u.name||u.title||u.description||"Unnamed check",error:u.details||u.description||"",details:u.meta||{}},h=(u.status||u.state||"").toLowerCase();h==="passed"||h==="success"||h==="ok"?i.push(p):t.push(p)})}),e.compliance&&Array.isArray(e.compliance.issues)&&(e.compliance.issues.forEach((d,u)=>{t.push({id:d.id||`issue-${u}`,category:(d.id?d.id.split("-")[0]:d.category)||"general",message:d.message||d.summary||"Unknown issue",error:d.error||d.details||d.message||"No details available",severity:d.severity||"warning",details:d.details||{}})}),Array.isArray(e.compliance.compliant)&&e.compliance.compliant.forEach((d,u)=>{i.push({id:d.id||`passed-${u}`,category:(d.id?d.id.split("-")[0]:d.category)||"general",message:d.message||"Passed check",error:"",details:d.details||{}})}));const o=d=>{const u=new Set;return d.filter(f=>u.has(f.id)?!1:(u.add(f.id),!0))},s=o(t),a=o(i),r=s.length+a.length,c=r>0?Math.round(a.length/r*100):0;a.push({id:"compliance-summary",category:"meta",message:"Compliance Summary",details:{percentageCompliant:c,totalChecks:r,passedChecks:a.length,issuesCount:s.length,ruleSet:e.ruleSet||"dod"}});const l={repoUrl:e.repoUrl||window.location.href,ruleSet:e.ruleSet||"dod",compliance:{issues:s,compliant:a,summary:`${c}% compliant`},totalIssues:s.length,totalPassed:a.length};return e.customConfig&&(l.customConfig=e.customConfig),l}catch(t){return console.error("adaptResultData fatal error",t),{repoUrl:e?.repoUrl||window.location.href,ruleSet:e?.ruleSet||"unknown",compliance:{issues:[{id:"adapter-failure",category:"internal",message:"Failed adapting result data",error:t?.message||String(t)}],compliant:[],summary:"Adapter failure"},totalIssues:1,totalPassed:0}}},this.renderOverview=function(e,t){const i=document.createElement("section");i.className="overview";const o=e.compliance.compliant.find(c=>c.category==="meta")?.details?.percentageCompliant||0,s=e.ruleSet||e.compliance.compliant.find(c=>c.category==="meta")?.details?.ruleSet||"dod",a=s==="dod"?"DoD":s==="partner"?"Partner":s==="docs"?"Docs":"Custom",r=e.customConfig?.gistUrl;i.innerHTML=`<h2>Compliance Overview</h2><div class="overview-header"><p class="overview-text">This dashboard provides an overview for your Azure template compliance status with the 'Azure Developer CLI Template Framework' <a href="https://github.com/Azure-Samples/azd-template-artifacts/blob/main/docs/development-guidelines/definition-of-done.md" title="Definition of Done">Definition of Done</a>. Browse the list below to fix specific issues or use the AI agent to automatically fix all compliance issues in VS Code.</p><div class="ruleset-info"><span class="ruleset-label">Configuration:</span>${s==="custom"&&r?`<a href="${r}" target="_blank" class="ruleset-value ${s}-badge" title="View custom ruleset on GitHub">${a} <i class="fas fa-external-link-alt fa-xs"></i></a>`:`<span class="ruleset-value ${s}-badge">${a}</span>`}<button id="change-ruleset-btn" class="btn btn-small" title="Change configuration"><i class="fas fa-sync-alt"></i></button></div></div><p>For more information about compliance and collections, go here <a href="https://github.com/Azure-Samples/azd-template-artifacts">Azure Developer CLI Template Framework Docs</a></p><div class="compliance-gauge"><div class="gauge-fill" id="complianceGauge" style="width: ${o}%; background-position: ${o}% 0;"></div><div class="gauge-label" id="compliancePercentage">${o}%</div></div><div class="overview-tiles"><div class="tile tile-issues"><div class="tile-icon"><i class="fas fa-exclamation-triangle"></i></div><div class="tile-value" id="issuesCount">${e.totalIssues}</div><div class="tile-title">Issues Found</div></div><div class="tile tile-passed"><div class="tile-icon"><i class="fas fa-check-circle"></i></div><div class="tile-value" id="passedCount">${e.totalPassed-1}</div><div class="tile-title">Passed Checks</div></div><div class="tile tile-trend"><div class="tile-header"><div class="tile-icon"><i class="fas fa-chart-line"></i></div><div class="tile-title">Compliance Trend</div></div><div id="trendChart" class="trend-chart"><div class="no-data-message">Not enough historical data available yet.</div></div></div></div>`,t.appendChild(i);try{this.loadAndRenderTrend(e,i)}catch(c){console.warn("Failed to initialize compliance trend rendering:",c)}setTimeout(()=>{const c=document.getElementById("change-ruleset-btn");c&&c.addEventListener("click",()=>{const l=e.repoUrl;l&&typeof window.analyzeRepo=="function"?window.analyzeRepo(l,"show-modal"):console.error("Unable to get repository URL or analyzeRepo function")})},100)},this.getResultsFolderForRepo=function(e){if(!e)return null;try{if(Array.isArray(window.templatesData)){const o=window.templatesData.find(s=>{const a=String(s.repoUrl||"").replace(/\.git$/,"").toLowerCase(),r=String(e).replace(/\.git$/,"").toLowerCase();return a===r});if(o&&o.relativePath){const s=o.relativePath.split("/")[0];if(s)return s}}const i=new URL(e).pathname.split("/").filter(Boolean);if(i.length>=2)return`${i[0]}-${i[1]}`.toLowerCase()}catch{}return null},this.loadAndRenderTrend=async function(e,t){const i=t.querySelector("#trendChart");if(!i)return;const o=this.getResultsFolderForRepo(e.repoUrl);if(!o)return;let s=[];try{const r=await fetch(`/results/${o}/history.json`,{cache:"no-store"});if(!r.ok)throw new Error(`HTTP ${r.status}`);s=await r.json()}catch(r){console.warn(`No history.json found for ${o}:`,r.message);return}if(!Array.isArray(s)||s.length<2)return;const a=s.map(r=>({x:new Date(r.timestamp),y:Number(r.percentage)||0})).sort((r,c)=>r.x-c.x);this.renderTrendSVG(i,a)},this.renderTrendSVG=function(e,t){e.innerHTML="";const i=e.clientWidth||360,o=120,s=12,a=t.map(v=>v.x.getTime()),r=t.map(v=>v.y),c=Math.min(...a),l=Math.max(...a);let d=Math.min(...r),u=Math.max(...r);d=Math.max(0,Math.min(100,d)),u=Math.max(0,Math.min(100,u));const f=v=>l===c?s:s+(v-c)/(l-c)*(i-2*s),p=v=>u===d?o/2:o-s-(v-d)/(u-d)*(o-2*s),h=t.map((v,T)=>`${T===0?"M":"L"} ${f(v.x.getTime()).toFixed(2)} ${p(v.y).toFixed(2)}`).join(" "),g=t[t.length-1],w=document.createElementNS("http://www.w3.org/2000/svg","svg");w.setAttribute("viewBox",`0 0 ${i} ${o}`),w.setAttribute("width","100%"),w.setAttribute("height",`${o}`),w.innerHTML=`<defs><linearGradient id="trendGrad" x1="0" y1="0" x2="0" y2="1"><stop offset="0%" stop-color="#28a745" stop-opacity="0.8" /><stop offset="100%" stop-color="#28a745" stop-opacity="0.2" /></linearGradient></defs><rect x="0" y="0" width="${i}" height="${o}" fill="transparent"/><path d="${h}" fill="none" stroke="#28a745" stroke-width="2" /><circle cx="${f(g.x.getTime()).toFixed(2)}" cy="${p(g.y).toFixed(2)}" r="3" fill="#28a745" />`,e.appendChild(w);const b=document.createElement("div");b.className="sr-only",b.textContent=`Latest compliance: ${g.y}%`,e.appendChild(b)},this.renderIssuesPanel=function(e,t){const i=document.createElement("section");i.className="panel",i.id="issuesPanel",e.compliance.issues.length>0&&i.classList.add("panel-open"),i.innerHTML=`<div class="panel-header"><div class="panel-title"><i class="fas fa-exclamation-circle"></i><span>Issues</span></div><i class="fas fa-chevron-down panel-toggle"></i></div><div class="panel-body"><div class="panel-content"><ul class="item-list" id="issuesList">${this.renderIssueItems(e.compliance.issues)}</ul></div></div>`,t.appendChild(i)},this.renderPassedPanel=function(e,t){const i=document.createElement("section");i.className="panel",i.id="passedPanel",e.compliance.issues.length===0&&i.classList.add("panel-open");const o=e.compliance.compliant.filter(s=>s.category!=="meta");i.innerHTML=`<div class="panel-header"><div class="panel-title"><i class="fas fa-check-circle"></i><span>Passed Checks</span></div><i class="fas fa-chevron-down panel-toggle"></i></div><div class="panel-body"><div class="panel-content"><ul class="item-list" id="passedList">${this.renderPassedItems(o)}</ul></div></div>`,t.appendChild(i)},this.renderIssueItems=function(e){return!e||e.length===0?'<li class="item"><div class="item-message">No issues found. Great job!</div></li>':e.map(t=>{let i;t.id.includes("missing-file")?i="Missing File":t.id.includes("missing-folder")?i="Missing Folder":t.id.includes("missing-workflow")?i="Missing Workflow":t.id.includes("missing-doc")?i="Missing Documentation":t.id.includes("readme")?i="README Issue":t.id.includes("bicep")?i="Bicep Issue":t.id.includes("azure-yaml")?i="Azure YAML Issue":i="General Issue";let o;return t.id.includes("missing-file")||t.id.includes("missing-folder")?o=`Create the missing ${t.id.includes("file")?"file":"folder"} in your repository.`:t.id.includes("missing-workflow")?o="Add the required workflow file to your .github/workflows directory.":t.id.includes("readme")?o="Update your README.md with the required headings and content.":t.id.includes("bicep")?o="Add the missing resources to your Bicep files.":t.id.includes("azure-yaml")?o="Update your azure.yaml file to include required sections.":o="Review the issue details and make appropriate changes.",`<li class="item issue-item"><div class="item-header"><div class="item-title">${t.message}</div><div class="item-category">${i}</div></div><div class="item-message">${t.error||t.message}</div><div class="item-details"><strong>How to fix:</strong> ${o}</div><div class="item-actions"><a href="#" class="item-link" onclick="return openEditorWithFile(event, '${t.id}')"><i class="fas fa-external-link-alt"></i> Fix in editor</a><a href="#" class="item-link" style="margin-left: 15px;" onclick="return createSingleIssue(event, '${t.id}')"><i class="fab fa-github"></i> Create issue</a></div></li>`}).join("")},this.renderPassedItems=function(e){return!e||e.length===0?'<li class="item"><div class="item-message">No passed checks yet.</div></li>':e.map(t=>{const i=t.category.replace(/([A-Z])/g," $1").replace(/^./,s=>s.toUpperCase());let o="";if(t.details&&Object.keys(t.details).length>0){o='<div class="item-details">';for(const[s,a]of Object.entries(t.details))Array.isArray(a)&&a.length>3?o+=`<div><strong>${s}:</strong> ${a.length} items</div>`:typeof a=="object"&&a!==null?o+=`<div><strong>${s}:</strong> ${JSON.stringify(a)}</div>`:o+=`<div><strong>${s}:</strong> ${a}</div>`;o+="</div>"}return`<li class="item passed-item"><div class="item-header"><div class="item-title">${t.message}</div><div class="item-category">${i}</div></div>${o}</li>`}).join("")},this.renderActionFooter=function(e,t){console.log("renderActionFooter called"),this.debug("Setting up action buttons from renderActionFooter"),this.generateAgentPrompt(e),this.setupActionButtons(e);const i=document.querySelector(".action-header");i?(console.log("Action header is in the DOM"),console.log("Action header styles:",window.getComputedStyle(i))):console.warn("Action header not found in the DOM!")},this.generateAgentPrompt=function(e){const t=e.compliance.issues;let o=`Fix Azure Template Compliance Issues (${e.compliance.compliant.find(s=>s.category==="meta")?.details?.percentageCompliant||0}%)

`;return t.length===0?(o+="• No issues found! The template is fully compliant.",o):(o+=`Issues that need fixing:

`,t.forEach(s=>{if(s.message,s.id.includes("missing-file")){const a=s.message.match(/Missing required file: (.+)/)?.[1]||s.message;o+=`• Create file: ${a}
`}else if(s.id.includes("missing-folder")){const a=s.message.match(/Missing required folder: (.+)/)?.[1]||s.message;o+=`• Create folder: ${a}
`}else o+=`• ${s.message}
`}),o+=`
Please fix these issues following Azure template best practices.`,o)},this.setupActionButtons=function(e){this.debug("Setting up action buttons"),setTimeout(()=>{try{this.debug("Setting up action buttons with delay");const t=document.getElementById("fixButton");if(t){this.debug("Found fixButton - setting up");const r=t.cloneNode(!0);t.parentNode&&t.parentNode.replaceChild(r,t),r.style.opacity="1 !important",r.style.visibility="visible !important",r.style.pointerEvents="auto !important",r.style.cursor="pointer !important",r.style.display="inline-flex !important";const c=encodeURIComponent(e.repoUrl);r.href=`https://insiders.vscode.dev/azure?azdTemplateUrl=${c}`,this.debug(`Set fix button URL to: ${r.href}`),r.addEventListener("click",function(l){l.preventDefault(),console.log("Fix button clicked"),window.open(`https://insiders.vscode.dev/azure?azdTemplateUrl=${c}`,"_blank")})}const i=document.getElementById("create-github-issue-btn");if(i){this.debug("Found createIssueButton - setting up");const r=i.cloneNode(!0);i.parentNode&&i.parentNode.replaceChild(r,i),r.style.opacity="1 !important",r.style.visibility="visible !important",r.style.pointerEvents="auto !important",r.style.cursor="pointer !important",r.style.display="inline-flex !important",r.addEventListener("click",function(){console.log("Create GitHub Issue button clicked"),typeof window.createGitHubIssue=="function"?window.createGitHubIssue():alert("GitHub issue creation is not available in this view")})}const o=document.getElementById("testProvisionButton");if(o){this.debug("Found testProvisionButton - setting up");const r=o.cloneNode(!0);o.parentNode&&o.parentNode.replaceChild(r,o),r.style.opacity="1 !important",r.style.visibility="visible !important",r.style.pointerEvents="auto !important",r.style.cursor="pointer !important",r.style.display="inline-flex !important",r.addEventListener("click",function(){console.log("Test AZD Provision button clicked"),typeof window.testAzdProvision=="function"?window.testAzdProvision():alert("AZD provision testing is not available in this view")})}const s=document.getElementById("save-results-btn");if(s){const r=s.cloneNode(!0);s.parentNode&&s.parentNode.replaceChild(r,s);try{const c=window.TemplateDoctorConfig||{},l=document.getElementById("save-results-note");c.autoSaveResults?(r.disabled=!0,r.title="Auto-save is enabled; results are saved automatically.",l&&(l.textContent="Auto-save is enabled; results are saved automatically.")):l&&(l.textContent='Clicking "Save Results" will open a pull request to store this analysis under the results directory in the configured repo.')}catch{}r.addEventListener("click",async()=>{try{if(!window.submitAnalysisToGitHub){alert("Saving is not available right now. Please refresh and try again.");return}if(!window.GitHubClient||!window.GitHubClient.auth?.isAuthenticated()){alert("Please sign in with GitHub to save results.");return}const c=window.GitHubClient.auth.getUsername(),l=window.reportDataOriginal||e;r.disabled=!0;const d=r.innerHTML;r.innerHTML='<i class="fas fa-spinner fa-spin"></i> Saving...';const u=await window.submitAnalysisToGitHub(l,c);if(u&&u.success){const f="A pull request is being created with your analysis results. Once the PR is merged, results will appear on the site after the nightly deployment. If you are an admin, you can deploy the site manually to publish immediately.";window.NotificationSystem?window.NotificationSystem.showSuccess("Save Requested",f,9e3):alert("Save requested. "+f)}else{const f=u&&(u.error||u.message)||"Unknown error";window.NotificationSystem?window.NotificationSystem.showWarning("Save Failed",`Could not save results: ${f}`,8e3):alert(`Could not save results: ${f}`)}r.innerHTML=d,r.disabled=!1}catch(c){console.error("Save results error:",c),window.NotificationSystem?window.NotificationSystem.showError("Save Failed",c.message||String(c),8e3):alert(`Save failed: ${c.message||c}`),r.disabled=!1}})}const a=document.querySelectorAll("button, a.btn");this.debug(`After setup: Found ${a.length} total interactive elements`),a.forEach((r,c)=>{this.debug(`Button #${c}: id=${r.id}, visible=${r.style.visibility}, clickable=${r.style.pointerEvents}`)})}catch(t){console.error("Error setting up action buttons:",t)}},200)},this.addEventListeners=function(e){e.querySelectorAll(".panel-header").forEach(t=>{t.addEventListener("click",()=>{t.parentElement.classList.toggle("panel-open")})}),window.openEditorWithFile=function(t,i){if(t.preventDefault(),!window.reportData.compliance.issues.find(c=>c.id===i))return!0;let s="";i.includes("missing-file")?s=i.replace("missing-file-",""):i.includes("missing-workflow")?s=`.github/workflows/${i.replace("missing-workflow-","")}.yml`:i.includes("readme")?s="README.md":i.includes("bicep")&&i.includes("main")?s="infra/main.bicep":i.includes("azure-yaml")&&(s="azure.yaml");let r=`https://insiders.vscode.dev/azure?azdTemplateUrl=${encodeURIComponent(window.reportData.repoUrl)}`;return s&&(r+=`&path=${encodeURIComponent(s)}`),window.open(r,"_blank"),!1},window.createSingleIssue=function(t,i){return t.preventDefault(),alert("GitHub issue creation for individual issues is not available in this view. Please use the 'Create GitHub Issue' button to create issues for all compliance problems."),!1}}}window.DashboardRenderer=new n})();const Ae="scanned-templates-section",Ne="template-grid",Je="pagination",Te=6;let V=!1,H=1;function Yt(){let n=document.getElementById(Ae);if(!n){n=document.createElement("section"),n.id=Ae,n.className="scanned-templates-section",n.innerHTML=`
      <div class="section-header">
        <h2>Previously Scanned Templates</h2>
      </div>
      <div class="section-content">
        <div id="${Ne}" class="template-grid"></div>
      </div>`;const e=document.getElementById("search-section");e?.parentNode?e.parentNode.insertBefore(n,e.nextSibling):document.body.appendChild(n)}return n}function Qt(n){const e=n.repoUrl.includes("github.com/")?n.repoUrl.split("github.com/")[1]:n.repoUrl,t=`template-${(n.relativePath||"unknown").split("/")[0]}`.replace(/[^a-zA-Z0-9-]/g,"-"),i=n.scannedBy&&n.scannedBy.length?n.scannedBy[n.scannedBy.length-1]:"Unknown",o=n.ruleSet||"dod",s=o==="dod"?"DoD":o==="partner"?"Partner":o==="docs"?"Docs":"Custom",a=o==="custom"?n.customConfig?.gistUrl:"",r=document.createElement("div");return r.className="template-card",r.id=t,r.dataset.repoUrl=n.repoUrl,r.dataset.dashboardPath=n.relativePath,r.dataset.ruleSet=o,r.innerHTML=`
    <div class="card-header">
      <h3 data-tooltip="${e}" class="has-permanent-tooltip">${e}</h3>
      <span class="scan-date">Last scanned by <strong>${i}</strong> on ${new Date(n.timestamp).toLocaleDateString()}</span>
    </div>
    <div class="card-body">
      ${a?`<a href="${a}" target="_blank" class="ruleset-badge ${o}-badge">${s}</a>`:`<div class="ruleset-badge ${o}-badge">${s}</div>`}
      <div class="compliance-bar">
        <div class="compliance-fill" style="width: ${n.compliance.percentage}%"></div>
        <span class="compliance-value">${n.compliance.percentage}%</span>
      </div>
      <div class="stats">
        <div class="stat-item issues">${n.compliance.issues} issues</div>
        <div class="stat-item passed">${n.compliance.passed} passed</div>
      </div>
    </div>
    <div class="card-footer">
      <button class="view-report-btn" data-action="view">View Report</button>
      <button class="rescan-btn" data-action="rescan">Rescan</button>
      <button class="validate-btn" data-action="validate">Run Validation</button>
    </div>`,r.querySelector(".card-footer")?.addEventListener("click",l=>{const d=l.target;if(!d||d.tagName!=="BUTTON")return;const u=d.getAttribute("data-action");u==="view"?document.dispatchEvent(new CustomEvent("template-card-view",{detail:{template:n}})):u==="rescan"?(console.log("[TemplateList] rescan requested",n.repoUrl),document.dispatchEvent(new CustomEvent("template-card-rescan",{detail:{template:n}}))):u==="validate"&&(console.log("[TemplateList] validate requested",n.repoUrl),document.dispatchEvent(new CustomEvent("template-card-validate",{detail:{template:n}})))}),r}function it(n,e,t){t.innerHTML="";const i=(n-1)*Te;e.slice(i,i+Te).forEach(o=>t.appendChild(Qt(o)))}function ot(n,e){let t=e.querySelector(`.${Je}`);t||(t=document.createElement("div"),t.className=Je,t.innerHTML=`
      <button class="prev-page" disabled>&laquo; Prev</button>
      <span class="page-info"></span>
      <button class="next-page" disabled>Next &raquo;</button>`,e.appendChild(t));const i=Math.ceil(n/Te),o=t.querySelector(".prev-page"),s=t.querySelector(".next-page"),a=t.querySelector(".page-info");a.textContent=`Page ${H} of ${i||1}`,o.disabled=H<=1,s.disabled=H>=i,o.onclick=()=>{H>1&&(H--,ee())},s.onclick=()=>{H<i&&(H++,ee())},t.style.display=i>1?"flex":"none"}function X(){try{if(!window.GitHubAuth){console.debug("[TemplateList] render aborted: GitHubAuth missing");return}if(!window.GitHubAuth.isAuthenticated()){console.debug("[TemplateList] render aborted: not authenticated");return}const n=window.templatesData;if(!Array.isArray(n)){console.debug("[TemplateList] render aborted: templatesData not an array",n);return}if(n.length===0){console.debug("[TemplateList] render aborted: templatesData empty");return}console.debug("[TemplateList] rendering",{count:n.length});const e=Yt(),t=e?.querySelector(`#${Ne}`);if(!t){console.debug("[TemplateList] render aborted: grid element missing");return}it(H,n,t),ot(n.length,e),V||(V=!0,document.dispatchEvent(new CustomEvent("template-cards-rendered",{detail:{count:n.length}})),console.debug("[TemplateList] render complete"))}catch(n){console.warn("[TemplateList] render error",n)}}function ee(){if(!V)return console.debug("[TemplateList] refresh: not rendered yet; calling render"),X();const n=document.getElementById(Ae);if(!n)return;const e=n.querySelector(`#${Ne}`);e&&Array.isArray(window.templatesData)&&(console.debug("[TemplateList] refresh executing"),it(H,window.templatesData,e),ot(window.templatesData.length,n))}function Zt(){let n=0;const e=10,t=setInterval(()=>{if(n++,V){clearInterval(t);return}try{X(),V&&clearInterval(t)}catch{}n>=e&&clearInterval(t)},300)}function ke(){console.debug("[TemplateList] init start"),X(),document.addEventListener("template-data-loaded",()=>{console.debug("[TemplateList] template-data-loaded event received"),V?ee():X()}),document.addEventListener("template-data-updated",()=>{console.debug("[TemplateList] template-data-updated event received"),ee()}),Zt()}window.TemplateList={init:ke,render:X,isRendered:()=>V,refresh:ee,getCount:()=>Array.isArray(window.templatesData)?window.templatesData.length:0};document.readyState==="complete"||document.readyState==="interactive"?queueMicrotask(()=>ke()):document.addEventListener("DOMContentLoaded",()=>ke());function $e(){let n=document.getElementById("analysis-section");if(!n){n=document.createElement("section"),n.id="analysis-section",n.className="analysis-section",n.innerHTML=`
      <div class="analysis-header">
        <button id="back-button" class="back-button"><i class="fas fa-arrow-left"></i> Back to Search</button>
        <div class="repo-info">
          <h3 id="repo-name">Repository Name</h3>
          <span id="repo-url">Repository URL</span>
        </div>
      </div>
      <div class="loading-container" id="loading-container" style="display:none">
        <div class="loading-spinner"></div>
        <p>Analyzing repository... This may take a moment.</p>
      </div>
      <div id="results-container" class="results-container" style="display:none"></div>
      <div class="error-container" id="analysis-error" style="display:none"><p class="error-text"></p></div>
    `;const s=document.querySelector("footer, .site-footer");s?.parentNode?s.parentNode.insertBefore(n,s):document.body.appendChild(n),console.debug("[template-card-view-handler] Created full #analysis-section structure")}let e=document.getElementById("results-container");e||(e=document.createElement("div"),e.id="results-container",e.className="results-container",n.appendChild(e));let t=document.getElementById("report");t||(t=document.createElement("div"),t.id="report",e.appendChild(t));const i=window.GitHubAuth;if(i&&typeof i.isAuthenticated=="function"&&i.isAuthenticated()){n.style.display="block",e.style.display="block",t.style.display="block",n.removeAttribute("aria-hidden"),e.removeAttribute("aria-hidden");try{n.setAttribute("data-auth-ready","true")}catch{}}else n.style.display="none",e.style.display="none"}function st(n){const e=n.detail;if(!e||!e.template)return;const i=e.template.repoUrl;if(!i)return;console.debug("[template-card-view-handler] Received event for repo",i),$e();const o=window.GitHubAuth;if(o&&typeof o.isAuthenticated=="function"&&!o.isAuthenticated()){console.debug("[template-card-view-handler] Ignoring view request while unauthenticated");return}const s=document.getElementById("analysis-section"),a=document.getElementById("results-container"),r=document.getElementById("report");if(s&&(s.style.display="block"),a&&(a.style.display="block"),r?r.innerHTML='<div class="loading-message">Loading report...</div>':console.warn("[template-card-view-handler] Failed to create/find #report after ensureAnalysisContainers"),!window.ReportLoader){console.warn("[template-card-view-handler] ReportLoader not available");return}window.ReportLoader.loadReport(i).catch(c=>{r&&(r.innerHTML=`<div class="error-message">Failed to load report: ${c.message||c}</div>`)})}document.addEventListener("template-card-view",st);document.readyState==="complete"||document.readyState==="interactive"?queueMicrotask(()=>{try{$e()}catch{}}):document.addEventListener("DOMContentLoaded",()=>{try{$e()}catch{}});try{window.__debugTriggerTemplateCardView=n=>{const e={repoUrl:n};document.dispatchEvent(new CustomEvent("template-card-view",{detail:{template:e}}))}}catch{}document.addEventListener("click",n=>{const e=n.target;if(!e)return;const t=e.closest(".view-report-btn");if(!t)return;const i=t.closest(".template-card");if(!i)return;const o=i.dataset.repoUrl;if(!o)return;console.debug("[template-card-view-handler] Delegated click for repo",o);let s={repoUrl:o};try{if(Array.isArray(window.templatesData)){const a=window.templatesData.find(r=>(r.repoUrl||"").toLowerCase()===o.toLowerCase());a&&(s=a)}}catch{}st(new CustomEvent("template-card-view",{detail:{template:s}}))});try{window.TemplateCardViewHandlerReady=!0,document.dispatchEvent(new CustomEvent("template-card-view-handler-ready"))}catch{}console.debug("[TemplateDoctor] template-card-view-handler initialized");(function(){function t(...r){typeof window.debug=="function"?window.debug("rescan-handler",...r):console.log("[RescanHandler]",...r)}function i(){const r={"Content-Type":"application/json"};try{const c=window.TemplateDoctorConfig||{};c.functionKey&&(r["x-functions-key"]=c.functionKey);const l=window.GitHubClient?.auth;if(l?.isAuthenticated()){const d=l.getToken();d&&(r.Authorization=`Bearer ${d}`)}}catch{}return r}function o(r,c){try{const l=r.replace(/\.git$/,"").toLowerCase();window.__dynamicReports=window.__dynamicReports||{},window.__dynamicReports[l]=c,t("Cached dynamic report",l),document.dispatchEvent(new CustomEvent("report-updated",{detail:{repoUrl:r,data:c,dynamic:!0}}))}catch(l){console.warn("cacheDynamicReport failed",l)}}async function s(r,c){const l=window.TemplateDoctorConfig||{},d=(l.apiBase||window.location.origin).replace(/\/$/,""),u={repoUrl:r,ruleSet:l.defaultRuleSet||"dod",mode:c};t("Submitting analysis",u);const f=window.Notifications?.loading?.("Rescan submitted",r);try{const p=await fetch(`${d}/v4/analyze-template`,{method:"POST",headers:i(),body:JSON.stringify(u)});if(!p.ok){const g=await p.text();throw new Error(`HTTP ${p.status} ${p.statusText} - ${g}`)}const h=await p.json();t("Initial analyze response",h),o(r,h),window.Notifications?.success?.("Analysis started",r,3e3),document.dispatchEvent(new CustomEvent("analysis-submitted",{detail:{repoUrl:r,request:u,response:h}})),a(r,h.analysisId||h.id)}catch(p){console.error("[RescanHandler] submission failed",p),window.Notifications?.error?.("Analysis Failed",p.message||String(p),6e3)}finally{f?.close&&f.close()}}async function a(r,c){if(!c){t("No analysisId returned; skipping polling");return}const d=((window.TemplateDoctorConfig||{}).apiBase||window.location.origin).replace(/\/$/,""),u=Date.now();async function f(){if((Date.now()-u)/6e4>10){t("Polling timeout exceeded");return}try{const h=`${d}/v4/validation-status?analysisId=${encodeURIComponent(c)}`;t("Polling status",h);const g=await fetch(h,{headers:i()});if(!g.ok)throw new Error(`Status HTTP ${g.status}`);const w=await g.json();if(t("Status payload",w.state||w.status||"unknown"),document.dispatchEvent(new CustomEvent("analysis-status",{detail:{repoUrl:r,analysisId:c,status:w}})),/completed|succeeded|failed|error/i.test(w.state||w.status||"")){w.report&&o(r,w.report),window.Notifications?.success?.("Analysis complete",r,4e3);const b=window.CurrentSelectedTemplateRepo;if(b&&b.toLowerCase()===r.toLowerCase())try{window.ReportLoader?.loadReport(r)}catch{}return}}catch(h){t("Polling error",h?.message||h)}setTimeout(f,5e3)}setTimeout(f,5e3)}document.addEventListener("template-card-rescan",r=>{const c=r?.detail?.template;c?.repoUrl&&(t("Rescan requested",c.repoUrl),s(c.repoUrl,"rescan"))}),window.RescanHandler={rescan:r=>s(r,"rescan"),pollStatus:a}})();(function(){function t(...r){typeof window.debug=="function"?window.debug("validate-handler",...r):console.log("[ValidateHandler]",...r)}function i(){const r={"Content-Type":"application/json"};try{const c=window.TemplateDoctorConfig||{};c.functionKey&&(r["x-functions-key"]=c.functionKey);const l=window.GitHubClient?.auth;if(l?.isAuthenticated()){const d=l.getToken();d&&(r.Authorization=`Bearer ${d}`)}}catch{}return r}function o(r,c){try{const l=r.replace(/\.git$/,"").toLowerCase();window.__dynamicReports=window.__dynamicReports||{},window.__dynamicReports[l]=c,document.dispatchEvent(new CustomEvent("report-updated",{detail:{repoUrl:r,data:c,dynamic:!0}}))}catch(l){t("cacheDynamicReport failed",l)}}async function s(r){const c=window.TemplateDoctorConfig||{},l=(c.apiBase||window.location.origin).replace(/\/$/,""),d={repoUrl:r,ruleSet:c.defaultRuleSet||"dod",mode:"validate"};t("Submitting validation",d);const u=window.Notifications?.loading?.("Validation submitted",r);try{const f=await fetch(`${l}/v4/analyze-template`,{method:"POST",headers:i(),body:JSON.stringify(d)});if(!f.ok){const h=await f.text();throw new Error(`HTTP ${f.status} ${f.statusText} - ${h}`)}const p=await f.json();o(r,p),window.Notifications?.success?.("Validation started",r,3e3),document.dispatchEvent(new CustomEvent("validation-submitted",{detail:{repoUrl:r,request:d,response:p}})),a(r,p.analysisId||p.id)}catch(f){console.error("[ValidateHandler] submission failed",f),window.Notifications?.error?.("Validation Failed",f.message||String(f),6e3)}finally{u?.close&&u.close()}}async function a(r,c){if(!c){t("No analysisId returned; skipping polling");return}const d=((window.TemplateDoctorConfig||{}).apiBase||window.location.origin).replace(/\/$/,""),u=Date.now();async function f(){if((Date.now()-u)/6e4>10){t("Validation polling timeout");return}try{const p=`${d}/v4/validation-status?analysisId=${encodeURIComponent(c)}`;t("Polling validation status",p);const h=await fetch(p,{headers:i()});if(!h.ok)throw new Error(`Status HTTP ${h.status}`);const g=await h.json();if(document.dispatchEvent(new CustomEvent("validation-status",{detail:{repoUrl:r,analysisId:c,status:g}})),/completed|succeeded|failed|error/i.test(g.state||g.status||"")){g.report&&o(r,g.report),window.Notifications?.success?.("Validation complete",r,4e3);const w=window.CurrentSelectedTemplateRepo;if(w&&w.toLowerCase()===r.toLowerCase())try{window.ReportLoader?.loadReport(r)}catch{}return}}catch(p){t("Validation polling error",p?.message||p)}setTimeout(f,5e3)}setTimeout(f,5e3)}document.addEventListener("template-card-validate",r=>{const c=r?.detail?.template;c?.repoUrl&&(t("Validation requested",c.repoUrl),s(c.repoUrl))}),window.ValidateHandler={validate:r=>s(r)}})();function Ie(n){const e=document.getElementById("search-results");if(!e)return;e.innerHTML="";const t=n.trim().toLowerCase();if(!t)return;const i=Array.isArray(window.templatesData)?window.templatesData:[];console.debug("[Search] performing search",{query:t,datasetSize:i.length});const o=i.filter(s=>s.repoUrl&&s.repoUrl.toLowerCase().includes(t)||s.relativePath&&s.relativePath.toLowerCase().includes(t));if(o.length!==0){for(const s of o.slice(0,5)){const a=document.createElement("div");a.className="repo-item",a.setAttribute("data-test","repo-item");const r=s.repoUrl.includes("github.com/")?s.repoUrl.split("github.com/")[1]:s.relativePath||s.repoUrl;a.innerHTML=`<div class="repo-name">${r}</div>`,e.appendChild(a)}window.__lastSearchResultsCount=o.length,document.dispatchEvent(new CustomEvent("search-results-ready",{detail:{count:o.length}}))}}function we(){const n=document.getElementById("repo-search"),e=document.getElementById("search-button");if(!n||!e||e._searchBound)return;e._searchBound=!0,console.debug("[Search] binding search handlers");const t=()=>Ie(n.value);e.addEventListener("click",t),n.addEventListener("keydown",i=>{i.key==="Enter"&&t()})}function Ke(){console.debug("[Search] init start"),we();let n=0;const e=setInterval(()=>{n++,we(),n>=10&&clearInterval(e)},300);document.addEventListener("template-data-loaded",()=>{console.debug("[Search] template-data-loaded event received"),setTimeout(()=>{we();const t=document.getElementById("repo-search");t&&t.value.trim()&&(console.debug("[Search] auto-running search after data load"),Ie(t.value))},0)}),document.addEventListener("perform-test-search",t=>{try{Ie(t.detail?.query||"")}catch{}}),window.__searchModuleReady=!0,document.dispatchEvent(new CustomEvent("search-module-ready"))}document.readyState==="complete"||document.readyState==="interactive"?queueMicrotask(Ke):document.addEventListener("DOMContentLoaded",Ke);const se=()=>window.TemplateDoctorConfig?.features?.backendMigration===!0,at=()=>window.TemplateDoctorConfig?.apiBase||"/api";async function ye(n,e){const t=await fetch(at().replace(/\/$/,"")+n,{...e,headers:{"Content-Type":"application/json",...e.headers||{}}});if(!t.ok){let i;try{i=await t.json()}catch{}const o=new Error(`HTTP ${t.status} ${n} ${i&&i.error||""}`);throw i&&Object.assign(o,i),o.status=t.status,o}return t.json()}const rt={async createIssue(n){if(se())return ye("/v4/issue-create",{method:"POST",body:JSON.stringify(n)});const e=window.GitHubClient;if(!e)throw new Error("GitHubClient not ready");n.labels?.length&&await e.ensureLabelsExist(n.owner,n.repo,n.labels);const t=await e.createIssueGraphQL({owner:n.owner,repo:n.repo,title:n.title,body:n.body,labels:n.labels});if(n.assignCopilot)try{await e.assignIssueToCopilotBot(t.issueNodeId)}catch{}return{issueNumber:t.number,htmlUrl:t.url,labelsEnsured:n.labels||[],labelsCreated:[],copilotAssigned:!!n.assignCopilot}},async forkRepository(n){if(se())try{return await ye("/v4/repo-fork",{method:"POST",body:JSON.stringify(n)})}catch(i){if(i?.samlRequired){try{const o=()=>{try{const s=window.NotificationSystem;s&&typeof s.show=="function"&&s.show({title:"SAML Authorization Required",message:"This repository requires SAML SSO authorization before forking. Use the authorization link if provided.",type:"warning",duration:12e3,actions:i.authorizeUrl?[{label:"Authorize SAML",primary:!0,onClick:()=>window.open(i.authorizeUrl,"_blank")}]:[]})}catch{}};window.NotificationSystem&&typeof window.NotificationSystem.show=="function"?o():document.addEventListener("notifications-ready",o,{once:!0})}catch{}return{forkOwner:n.targetOwner||"unknown",repo:n.sourceRepo,htmlUrl:void 0,ready:!1,attemptedCreate:!1,samlRequired:!0,documentationUrl:i.documentationUrl,authorizeUrl:i.authorizeUrl,error:i.error}}throw i}const e=window.GitHubClient;if(!e)throw new Error("GitHubClient not ready");const t=await e.forkRepository(n.sourceOwner,n.sourceRepo);return{forkOwner:t.forkOwner,repo:n.sourceRepo,htmlUrl:t.htmlUrl,ready:!0,attemptedCreate:!0}},async startBatchScan(n,e){if(!se())throw new Error("Backend feature disabled");return ye("/v4/batch-scan-start",{method:"POST",body:JSON.stringify({repos:n,mode:e})})},async getBatchStatus(n){if(!se())throw new Error("Backend feature disabled");const e=await fetch(at().replace(/\/$/,"")+"/v4/batch-scan-status?batchId="+encodeURIComponent(n));if(!e.ok)throw new Error("HTTP "+e.status+" batch-scan-status");return e.json()}};window.TemplateDoctorApiClient=rt;document.dispatchEvent(new CustomEvent("api-client-ready"));function ct(){return window.reportData}function He(){return window.NotificationSystem||window.Notifications}function be(n,e){const t=He();if(!t)return console.error(n+": "+e);t.showError?t.showError(n,e,1e4):t.error?t.error(n,e):console.error(n+": "+e)}function Xt(n,e){const t=He();if(!t)return console.log(n+": "+e);t.showInfo?t.showInfo(n,e,5e3):t.info?t.info(n,e):console.log(n+": "+e)}function en(n){const e=He();e?.confirm?e.confirm("Create GitHub Issues","This will create GitHub issues for all compliance problems. Proceed?",{confirmLabel:"Create",cancelLabel:"Cancel",onConfirm:n}):window.confirm("Create GitHub issues for all problems?")&&n()}function lt(n){try{const t=new URL(n).pathname.split("/");if(t.length>=3)return{owner:t[1],repo:t[2]}}catch{}return{owner:void 0,repo:void 0}}function te(n){return n&&n.charAt(0).toUpperCase()+n.slice(1)}function ne(n){if(!n)return"low";const e=n.toLowerCase();return e==="error"||e==="critical"?"high":e==="warning"||e==="warn"?"medium":"low"}function dt(n){const e=n.compliance?.issues||[],t=n.ruleSet||"dod",i=te(t),o={high:0,medium:0,low:0};e.forEach(a=>{o[ne(a.severity)]++});let s=`# Template Doctor Analysis

`;return s+=`Repo: ${n.repoUrl}
`,s+=`## Configuration
`,t==="custom"&&n.customConfig?.gistUrl?s+=`Rule Set: ${i} (custom from ${n.customConfig.gistUrl})
`:s+=`Rule Set: ${i}
`,s+=`Severity Breakdown: High ${o.high}, Medium ${o.medium}, Low ${o.low}

`,e.length&&(s+=`## Issues to Fix
`,e.forEach((a,r)=>{s+=`${r+1}. **${a.message}**${a.error?` - ${a.error}`:""}
`})),s+=`
---
*Generated by Template Doctor*`,s}function ut(n,e,t){const i=ne(e.severity),o=t.ruleSet||"dod",s=te(o);let a=`Child issue of: ${n}

`;return a+=`## Context
`,a+=`Severity: ${te(i)}
`,o==="custom"&&t.customConfig?.gistUrl?a+=`Rule Set: ${s} (custom from ${t.customConfig.gistUrl})
`:a+=`Rule Set: ${s}
`,a+=`Problem: ${e.message}
`,e.error&&(a+=`Details: ${e.error}
`),a+=`
---
*Generated by Template Doctor*`,a}function pt(n,e,t,i){if(/##\s*Context/i.test(i))return i;const o=ne(e.severity),s=t.ruleSet||"dod",a=te(s);let r=`Child issue of: ${n}

`;return r+=`## Context
`,r+=`Severity: ${te(o)}
`,s==="custom"&&t.customConfig?.gistUrl?r+=`Rule Set: ${a} (custom from ${t.customConfig.gistUrl})
`:r+=`Rule Set: ${a}
`,r+=`Problem: ${e.message}
`,e.error&&(r+=`Details: ${e.error}
`),r+=`
`,r+i.replace(/^\n+/,"")}async function ft(){const n=ct();if(!n)return be("Error","No report data");const{owner:e,repo:t}=lt(n.repoUrl);if(!e||!t)return be("Error","Cannot parse repository owner/repo");const i=n.compliance?.issues||[],o=n.ruleSet||"dod",s=new Date().toISOString().split("T")[0],r=`Template Doctor Analysis: ${n.compliance?.summary||"Template Doctor Analysis"} [${s}]`,c=dt(n),l=window.GITHUB_LABELS&&Array.isArray(window.GITHUB_LABELS)?window.GITHUB_LABELS:["template-doctor","template-doctor-full-scan"],d=`ruleset:${o}`,u=["severity:high","severity:medium","severity:low"],f=Array.from(new Set([...l,d,...u]));let p=document.getElementById("create-github-issue-btn");const h=p?tn(p,"Creating Issues..."):()=>{};try{const g=n.compliance?.compliant?.find(y=>y.details&&typeof y.details.percentageCompliant=="number")?.details?.percentageCompliant;for(const y of i)if(!y.issueTemplate)try{const $=Pe(y);$&&(y.filePath&&!$.filePath&&($.filePath=y.filePath),y.snippet&&!$.snippet&&($.snippet=y.snippet),y.issueTemplate=Be($,{compliancePercentage:g}))}catch{}const w=i.map(y=>{const $=ne(y.severity),R=y.issueTemplate;return{title:R?.title||y.message,body:R?.body?pt(r,y,n,R.body):ut(r,y,n),labels:["template-doctor","template-doctor-child-issue",d,`severity:${$}`]}}),b=await rt.createIssue({owner:e,repo:t,title:r,body:c,labels:f,assignCopilot:!0,childIssues:w}),v=b.childResults?b.childResults.filter(y=>y.issueNumber).length:0,T=b.childResults?b.childResults.filter(y=>y.error).length:0,m=v||T?` (children: ${v} ok${T?`, ${T} failed`:""})`:"";Xt("Issue Created",`#${b.issueNumber} created${m}`),document.dispatchEvent(new CustomEvent("issue-created",{detail:{number:b.issueNumber,url:b.htmlUrl}}))}catch(g){be("Issue Creation Failed",g.message||String(g))}finally{h()}}function tn(n,e){const t=n.innerHTML;return n.disabled=!0,n.innerHTML=`<i class="fas fa-spinner fa-spin"></i> ${e}`,()=>{n.disabled=!1,n.innerHTML=t}}function mt(){const n=document.getElementById("create-github-issue-btn");n&&n.addEventListener("click",()=>{en(()=>ft())},{once:!0})}typeof document<"u"&&document.addEventListener("template-report-rendered",()=>mt());window.TemplateDoctorIssueService={wireIssueButton:mt,createIssues:ft};document.addEventListener("issue-service-ready",()=>{});async function ht(n){const e=ct();if(!e)return;const{owner:t,repo:i}=lt(e.repoUrl);if(!t||!i)return;const o=e.compliance?.issues||[];try{const p=e.compliance?.compliant?.find(h=>h.details&&typeof h.details.percentageCompliant=="number")?.details?.percentageCompliant;for(const h of o)if(!h.issueTemplate)try{const g=Pe(h);g&&(h.filePath&&!g.filePath&&(g.filePath=h.filePath),h.snippet&&!g.snippet&&(g.snippet=h.snippet),h.issueTemplate=Be(g,{compliancePercentage:p}))}catch{}}catch{}const s=e.ruleSet||"dod",a=new Date().toISOString().split("T")[0],c=`Template Doctor Analysis: ${e.compliance?.summary||"Template Doctor Analysis"} [${a}]`,l=`ruleset:${s}`,d=["severity:high","severity:medium","severity:low"],u=window.GITHUB_LABELS&&Array.isArray(window.GITHUB_LABELS)?window.GITHUB_LABELS:["template-doctor","template-doctor-full-scan"],f=Array.from(new Set([...u,l,...d]));try{n.ensureLabelsExist&&await n.ensureLabelsExist(t,i,f);const p=dt(e),h=await n.createIssueGraphQL(t,i,c,p,f);for(const g of o){const w=ne(g.severity),b=["template-doctor","template-doctor-child-issue",`ruleset:${s}`,`severity:${w}`],v=g.issueTemplate,T=v?.title||g.message,m=v?.body?pt(c,g,e,v.body):ut(c,g,e);n.createIssueWithoutCopilot?await n.createIssueWithoutCopilot(t,i,T,m,b):n.createIssueGraphQL&&await n.createIssueGraphQL(t,i,T,m,b)}return h}catch(p){console.error("processIssueCreation failed",p)}}function nn(){window.GitHubClient&&ht(window.GitHubClient)}window.processIssueCreation=ht;window.createGitHubIssue=nn;function ve(n,e,t){try{window.debug?window.debug(n,e,t):console.log(`[${n}] ${e}`,t||"")}catch{}}async function on(n,e){if(!n||!e)return console.error("[github-action-hook] Missing result or username"),{success:!1,error:"Missing parameters"};try{const t=window.TemplateDoctorConfig||{};let i=!!t.archiveEnabled;const o=Object.prototype.hasOwnProperty.call(t,"nextAnalysisArchiveEnabledOverride");!i&&o&&(i=!!t.nextAnalysisArchiveEnabledOverride,delete t.nextAnalysisArchiveEnabledOverride,window.TemplateDoctorConfig=t);const s=t.archiveCollection||"aigallery",a=t.dispatchTargetRepo||"",c=n.compliance?.compliant?.find?.(w=>w.id==="compliance-summary")?.details?.percentageCompliant||0,l={repoUrl:n.repoUrl,ruleSet:n.ruleSet,username:e,timestamp:n.timestamp,analysisData:n,archiveEnabled:i,archiveCollection:s,...a?{targetRepo:a}:{},compliance:{percentage:c,passed:n.compliance?.compliant?.length||0,issues:n.compliance?.issues?.length||0}},d=t.analysis?.useServerSide===!0&&t.analysis?.serverSideDispatch===!0;d&&ve("github-action-hook","Using server-side dispatch API");const u=t.apiBase||window.location.origin,f=window.ApiRoutes?window.ApiRoutes.build("submit-analysis-dispatch"):`${u.replace(/\/$/,"")}/api/v4/submit-analysis-dispatch`;ve("github-action-hook",`Submitting via server endpoint: ${f}`);const p={"Content-Type":"application/json"};t.functionKey&&(p["x-functions-key"]=t.functionKey);const h=window.GitHubClient?.auth;if(h?.isAuthenticated?.())try{const w=h.getToken?.();w&&(p.Authorization=`Bearer ${w}`)}catch{}const g=await fetch(f,{method:"POST",headers:p,body:JSON.stringify({event_type:"template-analysis-completed",client_payload:l,useDirectIssueCreation:d})});if(ve("github-action-hook",`Server dispatch response status: ${g.status}`),!g.ok){const w=await g.text().catch(()=>"");throw g.status===404?new Error("Endpoint not found (404). Check submit-analysis-dispatch function deployment."):g.status===401?new Error("Unauthorized (401). Missing or invalid function key."):g.status===403?new Error("Permission denied (403). Server token may lack scopes or org SSO approval for GH_WORKFLOW_TOKEN."):new Error(`Server error (${g.status}): ${w||"Unknown error"}`)}return{success:!0,message:"Analysis submitted successfully"}}catch(t){return console.error("[github-action-hook] Error submitting analysis:",t),{success:!1,error:t?.message||String(t)}}}window.submitAnalysisToGitHub=on;function _(n,e){try{n instanceof HTMLElement?(n.textContent+=e.endsWith(`
`)?e:e+`
`,n.scrollTop=n.scrollHeight):n&&typeof n.log=="function"&&n.log(e)}catch{}try{const t=document.getElementById("azd-stop-btn");if(t){const o=t.getBoundingClientRect().top+window.scrollY+200,s=Math.max(0,document.documentElement.scrollHeight-window.innerHeight),a=Math.min(o,s);window.scrollY+window.innerHeight+40<a&&window.scrollTo({top:a,behavior:"smooth"})}}catch{}}function sn(n,e){if(window.Notifications&&window.Notifications.confirm)try{window.Notifications.confirm("Test AZD Provision",n,{onConfirm:e});return}catch{}confirm(n)&&e()}function gt(){if(!window.reportData){window.Notifications?window.Notifications.error("Error","No compliance data available to test AZD provision"):console.error("No compliance data available to test AZD provision");return}sn("This will trigger the template validation GitHub workflow for this repository. Proceed?",()=>Oe())}function an(n){if(!n||typeof n!="string")return"";let e=n.trim();try{if(e.startsWith("http://")||e.startsWith("https://")||e.startsWith("git@"))if(e.startsWith("git@")){const i=e.split(":");i.length>1&&(e=i[1])}else e=new URL(e).pathname}catch{}e=e.replace(/^\/+/,"");const t=e.split("/").filter(Boolean);return e=t.length?t[t.length-1]:e,e.replace(/\.git$/i,"")}function rn(n){const e=window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1",t=n&&n.apiBase?String(n.apiBase||"").trim():window.location.origin;return e&&window.location.port==="7071"?"http://localhost:7071":t}function Oe(){const n=window.TemplateDoctorConfig=window.TemplateDoctorConfig||{},e=rn(n).replace(/\/$/,""),t=window.reportData||{},i=t.repoUrl||"";let o,s;try{const w=new URL(i).pathname.split("/");w.length>=3&&(o=w[1],s=w[2])}catch{}const a=t.upstreamTemplate||t.upstream||"";let r=null;if(typeof a=="string"&&a.includes("/")?r=a.trim():o&&s&&(r=`${o}/${s}`),!r){_(document.getElementById("azd-provision-logs")||console,"[error] Cannot determine template name.");return}const c=an(r),l=document.getElementById("testProvisionButton")||document.getElementById("testProvisionButton-direct")||document.getElementById("testProvisionButton-fallback");let d=null;const u=()=>{l&&setTimeout(()=>{l.innerHTML=d||"Test AZD Provision",l.disabled=!1,l.style.backgroundColor=""},500)};l&&(d=l.innerHTML,l.innerHTML='<i class="fas fa-spinner fa-spin"></i> Starting…',l.disabled=!0);let f=document.getElementById("azd-provision-logs");if(f)f.textContent="";else{f=document.createElement("pre"),f.id="azd-provision-logs",f.style.cssText="max-height:300px;overflow:auto;background:#0b0c0c;color:#d0d0d0;padding:20px;border-radius:6px 0 0 6px;font-size:12px;margin:10px 0 50px 0;";const w=document.querySelector(".report-actions")||document.body;(w.parentNode||document.body).insertBefore(f,w.nextSibling);const b=document.createElement("div");b.id="azd-provision-controls",b.style.cssText="margin:10px 0 6px;display:flex;gap:8px;align-items:center;";const v=document.createElement("button");v.id="azd-stop-btn",v.textContent="Cancel Validation",v.style.cssText="padding:6px 12px;background:#b10e1e;color:#fff;border:none;border-radius:6px;cursor:pointer;box-shadow:0 1px 2px rgba(0,0,0,0.15);margin:0 0 10px 20px",v.disabled=!0,b.appendChild(v),f.parentNode.insertBefore(b,f);try{const T=window.__AzdProvisionTestConfig;T&&T.immediateEnableCancel===!0&&(v.disabled=!1)}catch{}}try{const w=document.getElementById("azd-stop-btn");if(w){const v=w.getBoundingClientRect().top+window.scrollY+200,T=Math.max(0,document.documentElement.scrollHeight-window.innerHeight);window.scrollTo({top:Math.min(v,T),behavior:"smooth"})}else f.scrollIntoView({behavior:"smooth",block:"end"})}catch{}const p=window.Notifications&&window.Notifications.loading?window.Notifications.loading("Starting AZD Provision",`Starting provisioning for ${c} in Azure Container App using Azure CLI image...`):null;if(!e){_(f,"[error] Missing backend base URL.");return}_(f,`[debug] Template repo: ${c}, Template name: ${r}`);const h=window.ApiRoutes?window.ApiRoutes.build("validation-template"):`${e}/api/v4/validation-template`;_(f,`[info] Triggering validation workflow: ${h}`);const g={templateUrl:t.repoUrl,targetRepoUrl:t.repoUrl};fetch(h,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(g)}).then(async w=>{if(!w.ok){let L="";try{if((w.headers.get("content-type")||"").includes("application/json")){const I=await w.json();L=I&&(I.error||I.message)?` - ${I.error||I.message}`:""}else{const I=await w.text();L=I?` - ${I.substring(0,200)}`:""}}catch{}throw new Error(`Validation start failed: ${w.status}${L}`)}const b=await w.json(),{runId:v=null,githubRunId:T=null,githubRunUrl:m=null,requestId:y=null}=b||{};_(f,`[info] Validation started. Run ID: ${v}${y?` (req ${y})`:""}`),T&&_(f,`[info] GitHub run id: ${T}`),m&&_(f,`[info] GitHub run url: ${m}`);try{localStorage.setItem(`validation_${v}`,JSON.stringify({githubRunId:T||null,githubRunUrl:m||null})),localStorage.setItem("lastValidationRunInfo",JSON.stringify({runId:v,githubRunId:T||null,githubRunUrl:m||null}))}catch{}if(p&&p.success("Validation Started",m?"Workflow started. Opening GitHub run in a new tab.":"Workflow started. You can monitor status below."),m)try{window.open(m,"_blank")}catch{}const $=window.ApiRoutes?window.ApiRoutes.build("validation-status"):`${e}/api/v4/validation-status`,R=document.getElementById("azd-stop-btn");if(R){R.disabled&&(R.disabled=!1),R.onclick=async()=>{try{R.disabled=!0;const L=R.textContent;R.textContent="Cancelling…";const N=window.ApiRoutes?window.ApiRoutes.build("validation-cancel"):`${e}/api/v4/validation-cancel`,I=await fetch(N,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({runId:v,githubRunId:T,githubRunUrl:m})});if(!I.ok){const ie=await I.text().catch(()=>"");throw new Error(`Cancel failed: ${I.status} ${I.statusText}${ie?` - ${ie.substring(0,200)}`:""}`)}const q=await I.json().catch(()=>({}));_(f,`[info] Cancellation requested for GitHub run ${q.githubRunId||T}`)}catch(L){_(f,`[error] ${L.message}`),R.disabled=!1,R.textContent="Cancel Validation"}};try{const L=window.__AzdProvisionTestConfig;if(L?.autoCancel){const N=typeof L.autoCancelDelay=="number"?L.autoCancelDelay:10;setTimeout(()=>{try{R.disabled||R.click()}catch{}},N)}}catch{}}try{document.dispatchEvent(new CustomEvent("azd-provision-started",{detail:{runId:v,githubRunId:T,githubRunUrl:m}}))}catch{}const O=window.__AzdProvisionTestConfig||{},Lt=typeof O.maxAttempts=="number"?O.maxAttempts:60,xt=typeof O.pollIntervalMs=="number"?O.pollIntervalMs:3e4;let he=0;const _t=async()=>{he++;try{const L=new URL($);v&&L.searchParams.set("runId",String(v)),L.searchParams.set("includeLogsUrl","1"),T&&L.searchParams.set("githubRunId",String(T));const N=await fetch(L.toString(),{headers:{"Content-Type":"application/json"}});if(!N.ok)throw new Error(`${N.status} ${N.statusText}`);const I=await N.json();if(I.status&&_(f,`[status] ${I.status}${I.conclusion?` (${I.conclusion})`:""}`),I.logsArchiveUrl&&!document.getElementById("gh-logs-link")){const q=document.createElement("a");q.id="gh-logs-link",q.href=I.logsArchiveUrl,q.textContent="Download workflow logs",q.target="_blank";const ie=document.getElementById("azd-provision-controls")||f.parentNode,ge=document.createElement("div");ge.style.cssText="margin:8px 0 0 20px;",ge.appendChild(q),ie?.appendChild(ge)}if(I.status==="completed"){p&&(I.conclusion==="success"?p.success("Validation Completed","Template passed validation."):p.error("Validation Completed","Template validation completed with issues."));try{R&&(R.disabled=!0)}catch{}return u(),!0}}catch(L){_(f,`[warn] Status check failed: ${L.message}`)}return!1},Ge=async()=>{he===0&&_(f,"[info] Monitoring GitHub workflow status…");const L=await _t();if(!L&&he<Lt)setTimeout(Ge,xt);else if(!L){if(_(f,"[warn] Timed out waiting for workflow to complete."),p)try{p.warning?p.warning("Validation Timeout","Stopped polling after 30 minutes."):p.info("Validation Timeout","Stopped polling after 30 minutes.")}catch{}try{R&&(R.disabled=!0)}catch{}u()}};Ge()}).catch(w=>{_(f,`[error] ${w.message}`),p&&p.error("Error",w.message),u()})}window.appendLog=_;window.runAzdProvisionTest=Oe;window.testAzdProvision=gt;window.AzdProvision={test:gt,run:Oe,appendLog:_};console.debug("[azd-provision] TypeScript module loaded");const cn=1500;function wt(){return window.NotificationSystem||window.Notifications}function Me(n,e){const t=wt();t?.showInfo?t.showInfo(n,e,4e3):console.log(n+": "+e)}function Fe(n,e){const t=wt();t?.showError?t.showError(n,e,8e3):console.error(n+": "+e)}let le=null,re=null;const ln="batch-scan-button",dn="batch-progress-bar",un="batch-progress-text",pn="batch-items",Ce="batch-cancel-btn";function z(n){return document.getElementById(n)}function Ye(){const n=z(ln);n&&!n.getAttribute("data-wired")&&(n.setAttribute("data-wired","1"),n.addEventListener("click",()=>{const e=document.getElementById("batch-urls");if(!e)return;const t=e.value.split(/\n|,/).map(i=>i.trim()).filter(Boolean);if(!t.length){Fe("Batch Scan","Enter at least one repository URL");return}yt(t)})),document.addEventListener("batch-status",e=>{const t=e.detail,i=z(dn),o=z(un);if(i&&t.total){const s=t.total?Math.min(100,Math.round((t.processed||0)/t.total*100)):0;i.style.width=s+"%"}if(o&&t.total&&(o.textContent=`${t.processed||0}/${t.total} Completed`),t.results&&Array.isArray(t.results)){const s=z(pn);s&&(s.innerHTML="",t.results.forEach(a=>{const r=document.createElement("div");r.className="batch-item",r.textContent=a.repo||a.repository||JSON.stringify(a),s.appendChild(r)}))}}),document.addEventListener("batch-started",()=>{const e=z(Ce);e&&(e.parentElement&&(e.parentElement.style.display="block"),e.onclick=()=>bt())}),document.addEventListener("batch-finished",()=>{const e=z(Ce);e&&e.parentElement&&(e.parentElement.style.display="none")}),document.addEventListener("batch-cancelled",()=>{const e=z(Ce);e&&(e.disabled=!0,e.textContent="Cancelled",setTimeout(()=>{e.parentElement&&(e.parentElement.style.display="none")},1200)),Me("Batch Scan Cancelled","Processing stopped")})}typeof document<"u"&&(document.readyState==="complete"||document.readyState==="interactive"?Ye():document.addEventListener("DOMContentLoaded",Ye));async function yt(n){try{const t=(window.TemplateDoctorConfig||{}).apiBase||window.location.origin,i=await fetch(`${t}/v4/batch-scan-start`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({repos:n})});if(!i.ok)throw new Error("Failed to start batch");const o=await i.json();le=o.batchId,document.dispatchEvent(new CustomEvent("batch-started",{detail:o})),Me("Batch Started",o.batchId),fn()}catch(e){Fe("Batch Start Failed",e.message||String(e))}}async function Qe(){if(le)try{const e=(window.TemplateDoctorConfig||{}).apiBase||window.location.origin,t=await fetch(`${e}/v4/batch-scan-status?batchId=${encodeURIComponent(le)}`);if(!t.ok)throw new Error("Status failed");const i=await t.json();document.dispatchEvent(new CustomEvent("batch-status",{detail:i})),(i.status==="completed"||i.status==="failed")&&(qe(),document.dispatchEvent(new CustomEvent("batch-finished",{detail:i})),Me("Batch Finished",i.status))}catch(n){Fe("Batch Poll Error",n.message||String(n))}}function fn(){qe(),Qe(),re=window.setInterval(Qe,cn)}function qe(){re&&(clearInterval(re),re=null)}function bt(){qe(),le=null,document.dispatchEvent(new CustomEvent("batch-cancelled"))}window.TemplateDoctorBatchScan={startBatch:yt,cancelBatch:bt};const D={tooltipEl:null,mouseX:0,mouseY:0};function mn(){if(D.tooltipEl)return D.tooltipEl;const n=document.createElement("div");return n.className="tooltip",document.body.appendChild(n),D.tooltipEl=n,n}function vt(n,e){const t=D.tooltipEl;if(!t)return;const i=t.getBoundingClientRect();let o=n+15,s=e+15;const a=window.innerWidth,r=window.innerHeight;o+i.width>a&&(o=a-i.width-10),s+i.height>r&&(s=e-i.height-10),t.style.left=o+"px",t.style.top=s+"px"}function Re(n){const e=mn();e.textContent=n,e.classList.add("visible"),vt(D.mouseX,D.mouseY)}function Ct(){D.tooltipEl&&D.tooltipEl.classList.remove("visible")}function hn(n){D.mouseX=n.clientX,D.mouseY=n.clientY,D.tooltipEl?.classList.contains("visible")&&vt(D.mouseX,D.mouseY)}function gn(n){const e=n.target;if(e)if(e.hasAttribute("title")){const t=e.getAttribute("title")||"";t.trim()!==""&&(e.dataset.tooltip=t,e.removeAttribute("title"),Re(t))}else e.dataset.tooltip&&e.dataset.tooltip.trim()!==""&&Re(e.dataset.tooltip)}function wn(n){const e=n.target;e&&e.dataset.tooltip&&(Ct(),e.classList.contains("has-permanent-tooltip")||(e.setAttribute("title",e.dataset.tooltip),delete e.dataset.tooltip))}function Ze(){document.addEventListener("mousemove",hn),document.addEventListener("mouseover",gn),document.addEventListener("mouseout",wn)}typeof document<"u"&&(document.readyState==="loading"?document.addEventListener("DOMContentLoaded",Ze):Ze());window.TemplateDoctorTooltips={forceShow:Re,forceHide:Ct};function Le(){let n=document.getElementById("ruleset-modal");n||(n=document.createElement("div"),n.id="ruleset-modal",n.className="modal",n.innerHTML=`
      <div class="modal-content">
        <div class="modal-header">
          <h2>Select Configuration</h2>
          <span class="close" role="button" aria-label="Close ruleset selection modal">&times;</span>
        </div>
        <div class="modal-body">
          <p>Select the configuration ruleset to use for analyzing this template:</p>
          <form id="ruleset-form">
            <div class="form-group">
              <label>
                <input type="radio" name="ruleset" value="dod" checked>
                <strong>DoD - Default</strong>
              </label>
              <p class="ruleset-description">The full Definition of Done ruleset with all requirements.</p>
            </div>
            <div class="form-group">
              <label>
                <input type="radio" name="ruleset" value="partner">
                <strong>Partner</strong>
              </label>
              <p class="ruleset-description">A simplified ruleset for partner templates.</p>
            </div>
            <div class="form-group">
              <label>
                <input type="radio" name="ruleset" value="docs">
                <strong>Documentation</strong>
              </label>
              <p class="ruleset-description">A ruleset focused on https://aka.ms/samples guidance.</p>
            </div>
            <div class="form-group">
              <label>
                <input type="radio" name="ruleset" value="custom">
                <strong>Custom</strong>
              </label>
              <p class="ruleset-description">Use a custom configuration ruleset.</p>
            </div>
            <div id="custom-config-container" style="display:none;">
              <div class="custom-config-tabs">
                <button type="button" class="tab-btn active" data-tab="paste">Paste JSON</button>
                <button type="button" class="tab-btn" data-tab="gist">GitHub Gist URL</button>
              </div>
              <div id="paste-tab" class="tab-content active">
                <textarea id="custom-config-json" rows="10" placeholder="Paste your custom ruleset configuration in JSON format..."></textarea>
              </div>
              <div id="gist-tab" class="tab-content">
                <div class="gist-input-container">
                  <input type="text" id="gist-url" placeholder="Enter a GitHub Gist URL (e.g., https://gist.github.com/username/gistid)" class="gist-input" />
                  <button type="button" id="fetch-gist-btn" class="btn btn-small">Fetch Gist</button>
                </div>
              </div>
              <p class="helper-text">JSON format should match the structure of the DoD ruleset. <a href="https://gist.github.com/anfibiacreativa/d8f29b232397069ec3157c8be799c1ac" target="_blank" rel="noopener noreferrer">Learn More</a></p>
            </div>
          </form>
          <div id="archive-override-container" class="form-group" style="display:none; margin-top:12px;">
            <label style="display:flex; align-items:center; gap:8px; cursor:pointer;">
              <input type="checkbox" id="archive-override" />
              <span>
                Also save metadata to the centralized archive for this analysis
                <span id="archive-override-hint" style="display:block; font-size:12px; color:#666; margin-top:4px;"></span>
              </span>
            </label>
          </div>
        </div>
        <div class="modal-footer">
          <button id="analyze-with-ruleset-btn" class="btn">Analyze Template</button>
        </div>
      </div>`,document.body.appendChild(n));const e=n,t=e.querySelector("#ruleset-form"),i=e.querySelector("#analyze-with-ruleset-btn"),o=e.querySelector("#custom-config-container"),s=e.querySelector("#custom-config-json"),a=e.querySelector("#gist-url"),r=e.querySelector("#fetch-gist-btn"),c=e.querySelector("#archive-override-container"),l=e.querySelector("#archive-override"),d=e.querySelector("#archive-override-hint");return yn({modal:e,form:t,analyzeBtn:i,customConfigContainer:o,customConfigInput:s,gistUrlInput:a,fetchGistBtn:r,archiveOverrideContainer:c,archiveOverrideCheckbox:l,archiveOverrideHint:d}),{modal:e,form:t,analyzeBtn:i,customConfigContainer:o,customConfigInput:s,gistUrlInput:a,fetchGistBtn:r,archiveOverrideContainer:c,archiveOverrideCheckbox:l,archiveOverrideHint:d}}function yn(n){const{modal:e,form:t,analyzeBtn:i,customConfigContainer:o,customConfigInput:s,gistUrlInput:a,fetchGistBtn:r,archiveOverrideContainer:c,archiveOverrideCheckbox:l}=n;if(e.__rulesetHandlersBound)return;e.__rulesetHandlersBound=!0;const d=e.querySelector(".close");d&&d.addEventListener("click",()=>e.style.display="none"),window.addEventListener("click",p=>{p.target===e&&(e.style.display="none")});const u=Array.from(e.querySelectorAll(".tab-btn")),f=Array.from(e.querySelectorAll(".tab-content"));u.forEach(p=>{p.addEventListener("click",h=>{h.preventDefault(),h.stopPropagation(),u.forEach(b=>b.classList.remove("active")),f.forEach(b=>b.classList.remove("active")),p.classList.add("active");const g=p.getAttribute("data-tab"),w=g?e.querySelector(`#${g}-tab`):null;w&&w.classList.add("active")})}),t&&Array.from(t.querySelectorAll('input[type="radio"][name="ruleset"]')).forEach(h=>{h.addEventListener("change",()=>{if(h.value==="custom"){o&&(o.style.display="block");try{const g=localStorage.getItem("td_custom_ruleset");if(g&&s){const w=JSON.parse(g);s.value=JSON.stringify(w,null,2),w.gistUrl&&a&&(a.value=w.gistUrl)}}catch{s&&(s.value="")}}else o&&(o.style.display="none")})}),r&&r.addEventListener("click",async p=>{if(p.preventDefault(),p.stopPropagation(),!a)return;const h=a.value.trim();if(!h){Y("warning","Missing URL","Please enter a GitHub Gist URL.",3e3);return}let g="";try{const b=h.split("/");if(g=b[b.length-1],!g)throw new Error("Could not extract Gist ID")}catch(b){Y("error","Invalid Gist URL",b?.message||"Invalid format",5e3);return}r.disabled=!0;const w=r.textContent;r.textContent="Loading…";try{const b=await fetch(`https://api.github.com/gists/${g}`);if(!b.ok)throw new Error(`Failed: ${b.status}`);const T=(await b.json()).files||{},m=Object.values(T)[0];if(!m||!m.content)throw new Error("No files in Gist");const y=JSON.parse(m.content);s&&(s.value=JSON.stringify(y,null,2)),u.forEach(O=>O.classList.remove("active")),f.forEach(O=>O.classList.remove("active"));const $=e.querySelector('.tab-btn[data-tab="paste"]'),R=e.querySelector("#paste-tab");$?.classList.add("active"),R?.classList.add("active"),Y("success","Gist Loaded","Custom configuration loaded.",3e3)}catch(b){Y("error","Gist Loading Failed",b?.message||"Error fetching gist",5e3)}finally{r.disabled=!1,r.textContent=w||"Fetch Gist"}}),i&&t&&i.addEventListener("click",p=>{p.preventDefault(),p.stopPropagation();const g=t.querySelector('input[name="ruleset"]:checked')?.value||"dod";try{const b=window.TemplateDoctorConfig||{};c&&c.style.display!=="none"&&(b.nextAnalysisArchiveEnabledOverride=!!l?.checked,window.TemplateDoctorConfig=b)}catch{}if(g==="custom")try{const b=s?.value.trim(),v=a?.value.trim();if(b){const T=JSON.parse(b);v&&(T.gistUrl=v),localStorage.setItem("td_custom_ruleset",JSON.stringify(T))}}catch{Y("error","Invalid JSON","Custom configuration JSON is invalid.",5e3);return}const w=n.modal.getAttribute("data-repo-url");n.modal.style.display="none",w&&window.analyzeRepo&&window.analyzeRepo(w,g)}),St(n)}function St(n){try{(window.TemplateDoctorConfig||{}).archiveEnabled===!0?n.archiveOverrideContainer&&(n.archiveOverrideContainer.style.display="none"):(n.archiveOverrideContainer&&(n.archiveOverrideContainer.style.display="block"),n.archiveOverrideCheckbox&&(n.archiveOverrideCheckbox.checked=!1),n.archiveOverrideHint&&(n.archiveOverrideHint.textContent="Global archive is OFF. Check this to archive this single run."))}catch{}}function Y(n,e,t,i){const o=window.NotificationSystem;if(!o)return;const a=o[{success:"showSuccess",error:"showError",warning:"showWarning",info:"showInfo"}[n]];typeof a=="function"&&a(e,t,i)}function bn(n){const{modal:e}=Le();e.setAttribute("data-repo-url",n),St(Le()),e.style.display="block"}window.showRulesetModal=bn;document.addEventListener("DOMContentLoaded",()=>{Le()});function vn(n){if(typeof n=="string"){const e=document.getElementById(n);if(!e)throw new Error(`Validation container '${n}' not found`);return e}return n}function Cn(n){try{if(n.startsWith("http")){const t=new URL(n).pathname.split("/").filter(Boolean);if(t.length>=2)return`${t[0]}/${t[1]}`}}catch{}return n}function ze(n,e){const t=window;if(t.ApiRoutes&&typeof t.ApiRoutes.build=="function")return t.ApiRoutes.build(n,{query:e});const o=(location.hostname==="localhost"||location.hostname==="127.0.0.1")&&window.location.port==="7071"?"http://localhost:7071":"",s=`/api/${n}`;if(e&&Object.keys(e).length){const a=new URLSearchParams;return Object.entries(e).forEach(([r,c])=>c!=null&&a.append(r,c)),`${o}${s}?${a.toString()}`}return`${o}${s}`}function M(n,e,t,i){const o=window.NotificationSystem;if(!o)return;const a=o[{success:"showSuccess",error:"showError",warning:"showWarning",info:"showInfo"}[n]];typeof a=="function"&&a(e,t,i)}function Sn(n,e,t){n.innerHTML="";const i=document.createElement("div");return i.className="td-validation",i.innerHTML=`
    <div class="td-val-header">
      <h3>${e==="workflow"?"Template Validation (Workflow)":"Template Validation"}</h3>
      <div class="td-val-controls">
        <button class="td-val-start btn btn-primary" type="button">Run Validation</button>
        ${t.cancellation?'<button class="td-val-cancel btn btn-danger" type="button" style="display:none;">Cancel</button>':""}
      </div>
    </div>
    <div class="td-val-status" role="status" aria-live="polite" style="display:none;"></div>
    <div class="td-val-progress" style="display:none;">
      <div class="td-val-progress-bar"><div class="td-val-progress-inner" style="width:0%"></div></div>
    </div>
    <div class="td-val-logs" style="display:none;"><pre class="td-val-log-pre"></pre></div>
    <div class="td-val-joblogs" style="display:none;"></div>
    <div class="td-val-results" style="display:none;">
      <div class="td-val-summary"></div>
      <div class="td-val-details"></div>
    </div>
  `,n.appendChild(i),{root:i,startBtn:i.querySelector(".td-val-start"),cancelBtn:i.querySelector(".td-val-cancel"),statusEl:i.querySelector(".td-val-status"),progressBar:i.querySelector(".td-val-progress"),progressInner:i.querySelector(".td-val-progress-inner"),logsWrap:i.querySelector(".td-val-logs"),logsPre:i.querySelector(".td-val-log-pre"),jobLogs:i.querySelector(".td-val-joblogs"),resultsWrap:i.querySelector(".td-val-results"),summary:i.querySelector(".td-val-summary"),details:i.querySelector(".td-val-details")}}function fe(n){const t={...{mode:"simple",features:{},polling:{}},...n},i=t.mode||"simple",o={cancellation:i==="workflow",jobLogs:i==="workflow"&&(t.features?.jobLogs??!0),...t.features},s={intervalMs:i==="workflow"?3e4:1e4,maxAttempts:i==="workflow"?60:30,...t.polling};try{const r=window.__ValidationTestOverrides;r?.polling&&(typeof r.polling.intervalMs=="number"&&(s.intervalMs=r.polling.intervalMs),typeof r.polling.maxAttempts=="number"&&(s.maxAttempts=r.polling.maxAttempts))}catch{}const a={opts:{...t,mode:i,features:o,polling:s},containerEl:vn(t.container),ui:null,state:"idle",pollAttempts:0};a.ui=Sn(a.containerEl,i,o),a.ui?.summary&&(a.ui.summary.setAttribute("role","region"),a.ui.summary.setAttribute("aria-live","polite"),a.ui.summary.setAttribute("aria-label","Validation summary")),a.ui.startBtn?.addEventListener("click",()=>{(a.state==="idle"||a.state==="completed-success"||a.state==="completed-failure"||a.state==="error"||a.state==="timeout")&&Xe(a).catch(r=>console.error("[validation] start error",r))}),a.ui.cancelBtn?.addEventListener("click",()=>{o.cancellation&&et(a).catch(r=>console.error("[validation] cancel error",r))});try{const r=localStorage.getItem("lastValidationRunInfo");if(r){const c=JSON.parse(r);c?.runId&&c.ts&&Date.now()-c.ts<7200*1e3&&(a.runId=c.runId,a.githubRunId=c.githubRunId,a.state="triggered",U(a,"running","Resuming previous validation run…"),a.ui?.logsWrap&&(a.ui.logsWrap.style.display=i==="workflow"?"block":"none"),K(a,0))}}catch{}return{start:()=>Xe(a),cancel:()=>et(a),getState:()=>a.state,destroy:()=>{a.pollTimer&&window.clearTimeout(a.pollTimer),a.containerEl.innerHTML="",a.state="idle"},resumeLastRun:()=>In(a)}}async function Xe(n){if(n.state!=="idle"&&!n.state.startsWith("completed")&&n.state!=="error"&&n.state!=="timeout")return;U(n,"starting","Starting validation…"),n.cancelled=!1,n.pollAttempts=0,n.githubRunId=void 0,n.runId=void 0;const e=n.ui;e.resultsWrap.style.display="none",e.logsWrap.style.display=n.opts.mode==="workflow"?"block":"none",e.jobLogs.style.display="none",e.statusEl.style.display="block",e.progressBar.style.display="block",de(e,5),e.startBtn.disabled=!0,e.cancelBtn&&(e.cancelBtn.style.display=n.opts.features.cancellation?"inline-block":"none");try{const t=Cn(n.opts.templateRef),i=ze("validation-template");xe(n,`Trigger URL: ${i}`);const o=new AbortController;n.abortController=o;const s=await fetch(i,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({templateName:t,templateUrl:n.opts.templateRef,targetRepoUrl:n.opts.templateRef}),signal:o.signal});if(!s.ok){const r=await At(s);throw new Error(`Trigger failed: ${s.status} ${s.statusText} ${r}`)}const a=await s.json();n.runId=a.runId,a.githubRunId&&(n.githubRunId=a.githubRunId),Et(n),U(n,"triggered","Validation workflow triggered."),M("info","Validation Started",`Run ${n.runId}`,4e3),de(e,15),K(n,0)}catch(t){U(n,"error",t?.message||"Failed to start validation"),e.startBtn.disabled=!1,e.cancelBtn&&(e.cancelBtn.style.display="none"),M("error","Validation Error",t?.message||"Failed to start",8e3)}}async function et(n){if(n.opts.features.cancellation&&n.runId&&!(n.state!=="running"&&n.state!=="triggered")){U(n,"cancelling","Cancelling…");try{const e=ze("validation-cancel"),t=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({runId:n.runId,githubRunId:n.githubRunId})});if(!t.ok){const i=await At(t);throw new Error(`Cancel failed: ${t.status} ${t.statusText} ${i}`)}M("success","Cancellation Requested",`Run ${n.runId}`,5e3),n.cancelled=!0}catch(e){M("error","Cancellation Error",e?.message||"Failed to cancel",8e3),U(n,"running","Resuming…")}}}function K(n,e){n.pollTimer&&window.clearTimeout(n.pollTimer),n.pollTimer=window.setTimeout(()=>En(n).catch(t=>console.error(t)),e)}async function En(n){if(!n.runId)return;const{polling:e,mode:t,features:i}=n.opts;if(n.pollAttempts>=(e.maxAttempts||30)){U(n,"timeout","Validation taking longer than expected."),ae(n,"timeout");return}n.pollAttempts++,n.state==="triggered"&&U(n,"running","Validation running…");const o=n.ui;if(o.progressInner&&n.opts.mode==="simple"){const s=Math.min(90,15+n.pollAttempts*5);de(o,s)}xe(n,`Polling attempt ${n.pollAttempts}`);try{const s={runId:n.runId};n.githubRunId&&(s.githubRunId=n.githubRunId),i.jobLogs&&(s.includeJobLogs="1"),s.includeLogsUrl="1";const a=ze("validation-status",s),r=await fetch(a,{headers:{"Content-Type":"application/json"}});if(!r.ok)throw new Error(`Status ${r.status}`);const c=await r.json();if(c.githubRunId&&!n.githubRunId&&(n.githubRunId=c.githubRunId,Et(n)),An(n,c),c.status==="completed"){c.conclusion==="success"?ae(n,"completed-success",c):n.cancelled||c.conclusion==="cancelled"?ae(n,"cancelled",c):ae(n,"completed-failure",c);return}K(n,e.intervalMs)}catch(s){xe(n,`Poll error: ${s?.message}`),K(n,Math.min(e.intervalMs*1.5,6e4))}}function An(n,e){const t=n.ui;if(n.opts.mode==="workflow"&&t.logsWrap&&t.logsPre&&(t.logsWrap.style.display="block",t.logsPre.textContent+=`[${new Date().toISOString()}] Status: ${e.status||"unknown"}
`,t.logsPre.scrollTop=t.logsPre.scrollHeight),n.opts.features.jobLogs&&e.jobLogs&&t.jobLogs){const i=e.jobLogs.map(o=>`<li><strong>${Z(o.name)}</strong> <em>(${Z(o.conclusion||o.status||"unknown")})</em>${o.logsUrl?` - <a href="${o.logsUrl}" target="_blank">logs</a>`:""}</li>`).join("");t.jobLogs.style.display="block",t.jobLogs.innerHTML=`<h4 style="margin:0 0 6px 0;">Job Logs</h4><ul style="margin:0; padding-left:18px;">${i}</ul>`}}function ae(n,e,t){U(n,e,Tn(e));const i=n.ui;if(de(i,100),i.startBtn.disabled=!1,i.cancelBtn&&(i.cancelBtn.style.display="none"),i.resultsWrap.style.display="block",i.summary){let o="td-val-summary";e==="completed-success"?o+=" success":e==="completed-failure"?o+=" failure":(e==="timeout"||e==="cancelled")&&(o+=" timeout"),i.summary.className=o,i.summary.innerHTML=$n(n,e,t)}if(i.details&&t?.results?.details?i.details.innerHTML=kn(t.results.details):i.details&&e==="completed-failure"&&!t?.results?.details&&(i.details.innerHTML='<div style="background:#f6f8fa; padding:12px; border-radius:6px;">No detailed results provided. Check GitHub run for more information.</div>'),e==="timeout"&&i.summary){const o=`td-val-continue-${n.runId||"x"}`;i.summary.innerHTML+=`<p><button id="${o}" class="btn btn-primary" style="margin-top:8px;">Continue Checking Status</button></p>`,setTimeout(()=>{const s=document.getElementById(o);s&&s.addEventListener("click",()=>{n.runId&&(n.state="running",U(n,"running","Continuing to poll…"),K(n,0))})},0)}switch(e){case"completed-success":M("success","Validation Success",`Run ${n.runId}`,5e3);break;case"completed-failure":M("error","Validation Failed",`Run ${n.runId}`,8e3);break;case"cancelled":M("warning","Validation Cancelled",`Run ${n.runId}`,5e3);break;case"timeout":M("warning","Validation Timeout",`Run ${n.runId}`,8e3);break}}function U(n,e,t){n.state=e,n.ui?.statusEl&&(n.ui.statusEl.textContent=t||e),n.opts.onStatusChange?.({state:e,runId:n.runId,githubRunId:n.githubRunId,message:t})}function de(n,e){n.progressInner&&(n.progressInner.style.width=`${e}%`)}function Tn(n){switch(n){case"completed-success":return"Validation completed successfully";case"completed-failure":return"Validation completed with issues";case"cancelled":return"Validation cancelled";case"timeout":return"Validation timed out";default:return n}}function kn(n){const e=n.filter(s=>s.status==="fail"),t=n.filter(s=>s.status==="warn"),i=n.filter(s=>s.status==="pass"),o=(s,a,r,c)=>r.length?`
    <details open style="margin:0 0 12px 0; border:1px solid ${c}; border-radius:6px;">
      <summary style="cursor:pointer; padding:8px 12px; font-weight:600; background:rgba(0,0,0,0.03);">${a} ${s} (${r.length})</summary>
      <div style="padding:10px 14px; font-size:13px; line-height:1.45;">
        ${r.map(l=>`
          <div style="margin:0 0 12px 0;">
            <div style="font-weight:600;">${Z(l.category)}</div>
            <div style="margin:4px 0 6px 0;">${Z(l.message)}</div>
            ${l.issues?.length?`<ul style="margin:4px 0 0 16px; padding:0; list-style:disc;">${l.issues.map(d=>`<li style="margin:2px 0;">${Z(d)}</li>`).join("")}</ul>`:""}
          </div>
        `).join("")}
      </div>
    </details>`:"";return[o("Failed Checks","❌",e,"#f9d0d0"),o("Warnings","⚠️",t,"#f1e05a"),o("Passed Checks","✅",i,"#34d058")].join("")}function $n(n,e,t){const i=t?.runUrl?`<p><a href="${t.runUrl}" target="_blank" rel="noopener noreferrer">View workflow on GitHub</a></p>`:"";let o="";try{const s=t?.results?.details;if(Array.isArray(s)&&s.length){const a=s.filter(l=>l.status==="fail").length,r=s.filter(l=>l.status==="warn").length;o=`<div style="margin-top:8px; font-size:12px; line-height:1.4;">Checks: <strong>${s.filter(l=>l.status==="pass").length}</strong> pass • <strong>${r}</strong> warn • <strong>${a}</strong> fail</div>`}}catch{}switch(e){case"completed-success":return`<strong>Success!</strong> Template passed all checks.${o}${i}`;case"completed-failure":return`<strong>Validation Failed.</strong> Issues detected.${o}${i}`;case"cancelled":return`<strong>Cancelled.</strong> Workflow cancellation requested.${i}`;case"timeout":return`<strong>Timeout.</strong> Still running in background? ${i}`;default:return`<strong>${e}</strong> ${i}`}}function Et(n){if(n.runId)try{const e={runId:n.runId,githubRunId:n.githubRunId,ts:Date.now()};localStorage.setItem(`validation_${n.runId}`,JSON.stringify(e)),localStorage.setItem("lastValidationRunInfo",JSON.stringify(e))}catch{}}function In(n){if(n.state!=="idle")return!1;try{const e=localStorage.getItem("lastValidationRunInfo");if(!e)return!1;const t=JSON.parse(e);return t?.runId?(n.runId=t.runId,n.githubRunId=t.githubRunId,n.pollAttempts=0,U(n,"running","Resuming previous validation run…"),K(n,0),!0):!1}catch{return!1}}async function At(n){try{return await n.text()}catch{return""}}function Z(n){return String(n).replace(/[&<>"]/g,e=>({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"})[e])}function xe(n,e){try{console.debug("[validation]",e)}catch{}n.opts.mode==="workflow"&&n.ui?.logsPre&&(n.ui.logsPre.textContent+=`[${new Date().toISOString()}] ${e}
`,n.ui.logsPre.scrollTop=n.ui.logsPre.scrollHeight)}function Rn(n,e,t){return fe({container:n,templateRef:e,mode:"simple"})}function Ln(n,e){const t=fe({container:"validation-root",templateRef:n,mode:"simple"});return t.start(),t}function Tt(n,e,t){return fe({container:n,templateRef:e,mode:"workflow",onStatusChange:t})}function kt(n,e,t){const i=fe({container:"githubValidationContainer",templateRef:n,mode:"workflow",onStatusChange:t});return i.start(),i}window.TemplateValidation={init:Rn,run:Ln};window.GitHubWorkflowValidation={init:Tt,run:kt};window.initGithubWorkflowValidation=Tt;window.runGithubWorkflowValidation=kt;console.debug("[validation] unified validation module loaded");const xn="BatchScanDB",F="batchProgress";let Q=null;function ue(...n){console.debug("[batch-scan-legacy]",...n)}function G(){return window.NotificationSystem||window.Notifications}async function me(){return Q||(Q=await new Promise((n,e)=>{const t=indexedDB.open(xn,1);t.onerror=()=>e(new Error("open error")),t.onupgradeneeded=i=>{const o=i.target.result;if(!o.objectStoreNames.contains(F)){const s=o.createObjectStore(F,{keyPath:"id"});s.createIndex("url","url",{unique:!0}),s.createIndex("status","status",{unique:!1})}},t.onsuccess=i=>n(i.target.result)}),Q)}async function W(n){const e=await me();await new Promise((t,i)=>{const o=e.transaction([F],"readwrite");o.objectStore(F).put(n),o.oncomplete=()=>t(),o.onerror=()=>i(o.error||new Error("put error"))})}async function _e(){const n=await me();return await new Promise((e,t)=>{const s=n.transaction([F],"readonly").objectStore(F).getAll();s.onsuccess=()=>e(s.result),s.onerror=()=>t(s.error||new Error("getAll error"))})}async function ce(){const n=await me();await new Promise((e,t)=>{const s=n.transaction([F],"readwrite").objectStore(F).clear();s.onsuccess=()=>e(),s.onerror=()=>t(s.error||new Error("clear error"))})}let A={urls:[],active:!1,processed:0,cancelled:!1,resumeMode:!1},E={textarea:null,results:null,items:null,progressBar:null,progressText:null,cancelBtn:null,cancelContainer:null,batchResults:null};function _n(n){if(!n)return[];const e=n.value.trim();return e?e.split(/[\n,]+/).map(i=>i.trim()).filter(Boolean).map(i=>i.startsWith("http")?i:i.includes("/")?`https://github.com/${i}`:"").filter(Boolean):[]}async function $t(){if(A.active){ue("Batch already active");return}Rt();const n=_n(E.textarea);if(n.length===0){G()?.showWarning?.("No URLs Found","Please enter at least one valid GitHub repository URL.",5e3);return}try{await me();const e=await _e();if(A.resumeMode=!1,e.length){const i=e.map(s=>s.url),o=n.filter(s=>i.includes(s));o.length?await new Promise(s=>{G()?.confirm?G().confirm("Resume Batch Scan",`Found ${o.length} previously scanned repositories. Resume and skip successful scans?`,{confirmLabel:"Resume",cancelLabel:"Start Fresh",onConfirm:()=>{A.resumeMode=!0,s()},onCancel:()=>{ce().finally(()=>s())}}):confirm(`Found ${o.length} previously scanned repositories. Resume?`)?(A.resumeMode=!0,s()):ce().finally(()=>s())}):await ce()}A.urls=n,A.active=!0,A.processed=0,A.cancelled=!1,E.items&&(E.items.innerHTML=""),E.progressBar&&(E.progressBar.style.width="0%"),E.progressText&&(E.progressText.textContent=`0/${n.length} Completed`),E.batchResults?.classList.add("active"),E.cancelContainer&&(E.cancelContainer.style.display="block");let t={};if(A.resumeMode){const i=await _e();t=Object.fromEntries(i.map(o=>[o.url,o]))}if(n.forEach((i,o)=>{const s=document.createElement("div");let a="batch-item pending",r="Pending",c="Waiting to be processed...",l=!0,d=!0;const u=t[i];if(A.resumeMode&&u?.status==="success"){a="batch-item success",r="Completed";const p=u.result?.compliance?.issues?.length??"?",h=u.result?.compliance?.compliant?.length??"?";c=`Analysis complete: ${p} issues, ${h} passed`,l=!1,A.processed++}s.className=a,s.id=`batch-item-${o}`;const f=i.includes("github.com/")?i.split("github.com/")[1]:i;s.innerHTML=`
        <div class="batch-item-header">
          <div class="batch-item-title">${f}</div>
          <div class="batch-item-status">${r}</div>
        </div>
        <div class="batch-item-message">${c}</div>
        <div class="batch-item-actions">
          <button class="view-btn" ${l?"disabled":""}>View Report</button>
          <button class="retry-btn" ${d?"disabled":""}>Retry</button>
        </div>`,E.items?.appendChild(s),A.resumeMode&&!l&&u?.result&&s.querySelector(".view-btn")?.addEventListener("click",()=>De(u.result))}),A.resumeMode&&A.processed){const i=A.processed/n.length*100;E.progressBar&&(E.progressBar.style.width=i+"%"),E.progressText&&(E.progressText.textContent=`${A.processed}/${n.length} Completed`)}for(let i=0;i<n.length&&!A.cancelled;i++)await Dn(n[i],i);Un()}catch(e){ue("Batch scan error",e),G()?.showError?.("Batch Scan Error",`An error occurred during batch scan: ${e.message||e}`,8e3)}}async function Dn(n,e){const t=document.getElementById(`batch-item-${e}`);if(!t||t.classList.contains("success"))return;t.className="batch-item processing",t.querySelector(".batch-item-status").textContent="Processing",t.querySelector(".batch-item-message").textContent="Analyzing...";let i=n;try{window.checkAndUpdateRepoUrl&&(i=await window.checkAndUpdateRepoUrl(n))}catch(s){ue("Fork substitution skipped",s?.message||s)}try{const s=window.TemplateAnalyzer;if(!s)throw new Error("Analyzer unavailable");const a=await s.analyzeTemplate(i,"dod");t.className="batch-item success",t.querySelector(".batch-item-status").textContent="Completed",t.querySelector(".batch-item-message").textContent=`Analysis complete: ${a.compliance.issues.length} issues, ${a.compliance.compliant.length} passed`;const r=t.querySelector(".view-btn"),c=t.querySelector(".retry-btn");r&&(r.disabled=!1,r.addEventListener("click",()=>De(a))),c&&(c.disabled=!0),await W({id:`repo-${e}`,url:n,status:"success",timestamp:new Date().toISOString(),result:a})}catch(s){t.className="batch-item error",t.querySelector(".batch-item-status").textContent="Error",t.querySelector(".batch-item-message").textContent=s.message||"Analysis failed";const a=t.querySelector(".retry-btn");a&&(a.disabled=!1,a.addEventListener("click",async()=>{a.disabled=!0,t.className="batch-item processing",t.querySelector(".batch-item-status").textContent="Processing",t.querySelector(".batch-item-message").textContent="Retrying...";try{const r=window.TemplateAnalyzer;if(!r)throw new Error("Analyzer unavailable");const c=await r.analyzeTemplate(i,"dod");t.className="batch-item success",t.querySelector(".batch-item-status").textContent="Completed",t.querySelector(".batch-item-message").textContent=`Analysis complete: ${c.compliance.issues.length} issues, ${c.compliance.compliant.length} passed`;const l=t.querySelector(".view-btn");l&&(l.disabled=!1,l.addEventListener("click",()=>De(c))),await W({id:`repo-${e}`,url:n,status:"success",timestamp:new Date().toISOString(),result:c})}catch(r){t.className="batch-item error",t.querySelector(".batch-item-status").textContent="Error",t.querySelector(".batch-item-message").textContent=r.message||"Retry failed",a.disabled=!1,await W({id:`repo-${e}`,url:n,status:"error",timestamp:new Date().toISOString()})}})),await W({id:`repo-${e}`,url:n,status:"error",timestamp:new Date().toISOString()})}A.processed++;const o=A.processed/A.urls.length*100;E.progressBar&&(E.progressBar.style.width=o+"%"),E.progressText&&(E.progressText.textContent=`${A.processed}/${A.urls.length} Completed`)}function De(n){const e=document.getElementById("analysis-section"),t=document.getElementById("results-container"),i=document.getElementById("loading-container"),o=document.getElementById("error-section");if(!e||!t)return;document.getElementById("search-section").style.display="none",e.style.display="block",t.style.display="block",i&&(i.style.display="none"),o&&(o.style.display="none");const s=n.repoUrl?.split("github.com/")[1]||n.repoUrl||"Repository",a=document.getElementById("repo-name");a&&(a.textContent=s);const r=document.getElementById("repo-url");r&&(r.textContent=n.repoUrl);try{const c=window.DashboardRenderer;c?c.render(n,t):t.textContent="Dashboard renderer unavailable",e.scrollIntoView({behavior:"smooth"})}catch(c){t.textContent="Render error: "+(c.message||c)}}function Un(){if(E.cancelContainer&&(E.cancelContainer.style.display="none"),A.cancelled){const n=A.urls.length-A.processed;G()?.showInfo?.("Batch Scan Cancelled",`Batch scan cancelled. ${A.processed} repositories processed, ${n} cancelled.`,6e3)}else G()?.showSuccess?.("Batch Scan Complete",`Completed scanning ${A.urls.length} repositories.`,6e3);A.active=!1}function It(){A.active&&(A.cancelled=!0,E.cancelBtn&&(E.cancelBtn.disabled=!0,E.cancelBtn.textContent="Cancelling..."),W({id:"batch-status",url:"cancel",status:"cancelled",timestamp:new Date().toISOString(),result:{processedCount:A.processed,totalCount:A.urls.length}}).catch(()=>{}),G()?.showInfo?.("Cancelling Batch Scan","Current repository will finish before stopping.",5e3))}function Rt(){E.textarea=document.getElementById("batch-urls"),E.results=document.getElementById("batch-results"),E.items=document.getElementById("batch-items"),E.progressBar=document.getElementById("batch-progress-bar"),E.progressText=document.getElementById("batch-progress-text"),E.cancelBtn=document.getElementById("batch-cancel-btn"),E.cancelContainer=document.getElementById("batch-cancel-container"),E.batchResults=document.getElementById("batch-results")}function tt(){Rt();const n=document.getElementById("batch-scan-button");n&&!n.getAttribute("data-batch-scan-extracted")&&(n.setAttribute("data-batch-scan-extracted","1"),n.addEventListener("click",()=>$t()),ue("Legacy batch scan logic fully extracted and wired")),E.cancelBtn&&!E.cancelBtn.getAttribute("data-batch-scan-extracted")&&(E.cancelBtn.setAttribute("data-batch-scan-extracted","1"),E.cancelBtn.addEventListener("click",()=>It()))}typeof document<"u"&&(document.readyState==="loading"?document.addEventListener("DOMContentLoaded",tt):tt());window.LegacyBatchScanStore={putProgress:W,getAllProgress:_e,clearProgress:ce};window.LegacyBatchScan={start:$t,cancel:It,db:()=>Q,store:window.LegacyBatchScanStore};const Bn=["/css/style.css","/css/templates.css","/css/dashboard.css"];Bn.forEach(n=>{try{const e=document.createElement("link");e.rel="stylesheet",e.href=n,document.head.appendChild(e)}catch(e){console.warn("[main] unable to append legacy stylesheet",n,e)}});console.debug("[TemplateDoctor] main.ts module entry loaded");
