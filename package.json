{
    "name": "template-doctor",
    "version": "0.0.1",
    "description": "An Azure template analysis and healing app",
    "main": "bin/cli.js",
    "private": true,
    "workspaces": [
        "packages/*"
    ],
    "bin": {
        "template-doctor": "dist/cli.js"
    },
    "scripts": {
        "setup:uami": "bash ./scripts/setup.sh",
        "dev:api": "(cd packages/api && npm start)",
        "dev:frontend": "(cd packages/app && npm start)",
    "build:frontend": "(cd packages/app && npm run build)",
    "build:server": "(cd packages/server && npm run build)",
    "build:full": "npm run build:frontend && npm run build:server",
    "start:full": "SERVE_FRONTEND=true node packages/server/dist/index.js",
    "deploy:frontend:container": "npm run build:frontend && CID=\"$(docker ps -q -f name=td_local || docker compose ps -q template-doctor 2>/dev/null)\" && if [ -z \"$CID\" ]; then echo 'No running container (td_local or service template-doctor) found'; exit 1; fi; echo Using container $CID; docker cp packages/app/dist/index.html $CID:/app/public/index.html && docker cp packages/app/dist/assets/. $CID:/app/public/assets && if [ -d packages/app/dist/configs ]; then docker cp packages/app/dist/configs/. $CID:/app/public/configs; fi",
            "validate:legacy": "grep -E '<script[^>]+(action-buttons-(fallback|direct)\\.js|ruleset-docs/analyzer\\.js)' packages/app/index.html >/dev/null && echo 'Found forbidden legacy script tag' && exit 1 || echo 'No forbidden legacy script tags found'",
    "guard:legacy": "node scripts/check-no-legacy-scripts.mjs",
        "test": "npm run test:frontend --",
        "test:frontend": "cd packages/app && npx playwright test",
        "test:api": "(cd packages/api && npm run test --)",
        "test:all": "npm run test:api && npm run test:frontend",
        "test:ui": "(cd packages/app && npm run test:ui)",
        "test:debug": "(cd packages/app && npm run test:debug)",
        "smoke:api": "node scripts/smoke-api.mjs"
    },
    "keywords": [
        "azd",
        "azure",
        "templates"
    ],
    "author": "",
    "license": "MIT",
    "devDependencies": {
        "@playwright/test": "^1.55.0",
        "@types/node": "^24.0.14"
    },
    "dependencies": {
        "@actions/core": "^1.11.1",
        "dotenv": "^17.2.0",
        "open": "^10.2.0"
    }
}
