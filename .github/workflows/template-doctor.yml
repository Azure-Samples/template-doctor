name: Template Doctor - Scan and Update Results

on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: "Repository URL to scan"
        required: true
      rule_set:
        description: "Rule set to use (e.g. 'dod')"
        required: true
        default: "dod"

jobs:
  scan-template:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
  - name: Run template analysis
        id: analysis
        run: |
          REPO_URL="${{ github.event.inputs.repo_url }}"
          RULE_SET="${{ github.event.inputs.rule_set }}"
          
          # Extract repo owner and name from URL
          if [[ $REPO_URL =~ github\.com\/([^\/]+)\/([^\/\.]+) ]]; then
            OWNER="${BASH_REMATCH[1]}"
            REPO="${BASH_REMATCH[2]}"
          else
            echo "Could not parse repository URL"
            exit 1
          fi
          
          echo "Analyzing $OWNER/$REPO with ruleset $RULE_SET"
          
          # Run the analysis and save output
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          RESULT_PATH="results/${OWNER}-${REPO}"
          mkdir -p $RESULT_PATH
          
          # Run analysis and capture the output
          # Use built CLI in dist or npm bin
          if [ -f "dist/cli.js" ]; then
            node dist/cli.js analyze "$REPO_URL" -r "$RULE_SET" -o "$RESULT_PATH/index.html"
          else
            npx -y template-doctor analyze "$REPO_URL" -r "$RULE_SET" -o "$RESULT_PATH/index.html"
          fi
          
          # Set outputs for use in the next steps
          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          echo "repo=$REPO" >> $GITHUB_OUTPUT
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "result_path=$RESULT_PATH" >> $GITHUB_OUTPUT
      
      - name: Extract compliance statistics
        id: compliance
        run: |
          # This would extract compliance statistics from the report
          # For now, let's assume we can parse this from the HTML or JSON output
          # This is a placeholder - implementation will depend on how the data is structured
          
          # Placeholder values
          ISSUES=5
          PASSED=45
          TOTAL=50
          PERCENTAGE=90
          
          echo "issues=$ISSUES" >> $GITHUB_OUTPUT
          echo "passed=$PASSED" >> $GITHUB_OUTPUT
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "percentage=$PERCENTAGE" >> $GITHUB_OUTPUT
      
  - name: Update index-data.js
        id: update_index
        run: |
          # Create a new entry for the scanned template
          NEW_ENTRY=$(cat <<EOF
          {
            "repoUrl": "${{ github.event.inputs.repo_url }}",
            "owner": "${{ steps.analysis.outputs.owner }}",
            "repo": "${{ steps.analysis.outputs.repo }}",
            "timestamp": "${{ steps.analysis.outputs.timestamp }}",
            "relativePath": "${{ steps.analysis.outputs.result_path }}/index.html",
            "compliance": {
              "issues": ${{ steps.compliance.outputs.issues }},
              "passed": ${{ steps.compliance.outputs.passed }},
              "total": ${{ steps.compliance.outputs.total }},
              "percentage": ${{ steps.compliance.outputs.percentage }}
            }
          }
          EOF
          )
          
          # Check if index-data.js exists, if not create it
          if [ ! -f "packages/app/results/index-data.js" ]; then
            mkdir -p packages/app/results
            echo "// Template Doctor scanned templates data
          window.templatesData = [];" > packages/app/results/index-data.js
          fi
          
          # Update the file by inserting the new entry at the beginning of the array
          sed -i "s|window.templatesData = \[|window.templatesData = \[$NEW_ENTRY,|" packages/app/results/index-data.js
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Add scan results for ${{ steps.analysis.outputs.owner }}/${{ steps.analysis.outputs.repo }}"
          title: "Add scan results for ${{ steps.analysis.outputs.owner }}/${{ steps.analysis.outputs.repo }}"
          body: |
            This PR adds scan results for the repository ${{ steps.analysis.outputs.owner }}/${{ steps.analysis.outputs.repo }}.
            
            - Timestamp: ${{ steps.analysis.outputs.timestamp }}
            - Issues: ${{ steps.compliance.outputs.issues }}
            - Passed: ${{ steps.compliance.outputs.passed }}
            - Compliance: ${{ steps.compliance.outputs.percentage }}%
            
            The scan results have been added to the index-data.js file and the HTML report has been generated.
          branch: "scan/${{ steps.analysis.outputs.owner }}-${{ steps.analysis.outputs.repo }}"
          base: ${{ github.ref_name }}
          delete-branch: true