name: Harness: Dispatch Submit Analysis

on:
  workflow_dispatch:
    inputs:
      repoUrl:
        description: 'Repository URL to display in PR body (e.g., https://github.com/owner/repo)'
        required: true
        type: string
      ruleSet:
        description: 'Ruleset used for the analysis'
        required: true
        default: 'dod'
        type: choice
        options:
          - dod
          - partner
          - custom
      username:
        description: 'GitHub username who ran the analysis (defaults to github.actor)'
        required: false
        type: string
      timestamp:
        description: 'ISO timestamp for the analysis (defaults to now UTC)'
        required: false
        type: string
      upstream:
        description: 'Optional canonical upstream repo (owner/repo)'
        required: false
        type: string
      originUpstream:
        description: 'Optional origin upstream repo (owner/repo)'
        required: false
        type: string
      archiveEnabled:
        description: 'Archive metadata to central collection (true/false)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'
      archiveCollection:
        description: 'Archive collection name (if archiving)'
        required: false
        default: 'aigallery'
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  fire-dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Compute defaults and sample analysis
        id: prep
        shell: bash
        run: |
          # timestamp default (UTC ISO8601)
          if [ -n "${{ inputs.timestamp }}" ]; then
            TS="${{ inputs.timestamp }}"
          else
            TS="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
          fi

          # username default
          USERNAME="${{ inputs.username }}"
          if [ -z "${USERNAME}" ]; then USERNAME="${{ github.actor }}"; fi

          # Minimal analysis data JSON (single-line)
          ANALYSIS='{"compliance":{"percentage":87,"passed":26,"issues":4}}'

          echo "timestamp=${TS}" >> "$GITHUB_OUTPUT"
          echo "username=${USERNAME}" >> "$GITHUB_OUTPUT"
          echo "analysis=${ANALYSIS}" >> "$GITHUB_OUTPUT"

      - name: Dispatch repository event (template-analysis-completed)
        shell: bash
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -z "$GH_TOKEN" ]; then
            echo "GITHUB_TOKEN not available" >&2
            exit 1
          fi

          archiveEnabled="${{ inputs.archiveEnabled }}"
          if [ "$archiveEnabled" = "true" ] || [ "$archiveEnabled" = "True" ]; then
            ARCHIVE_BOOL=true
          else
            ARCHIVE_BOOL=false
          fi

          payload=$(jq -n \
            --arg repoUrl "${{ inputs.repoUrl }}" \
            --arg ruleSet "${{ inputs.ruleSet }}" \
            --arg username "${{ steps.prep.outputs.username }}" \
            --arg timestamp "${{ steps.prep.outputs.timestamp }}" \
            --arg upstream "${{ inputs.upstream }}" \
            --arg originUpstream "${{ inputs.originUpstream }}" \
            --arg analysisData "${{ steps.prep.outputs.analysis }}" \
            --arg archiveCollection "${{ inputs.archiveCollection }}" \
            --argjson archiveEnabled "$ARCHIVE_BOOL" \
            '{
              event_type: "template-analysis-completed",
              client_payload: {
                repoUrl: $repoUrl,
                ruleSet: $ruleSet,
                username: $username,
                timestamp: $timestamp,
                upstream: $upstream,
                originUpstream: $originUpstream,
                analysisData: ($analysisData | fromjson),
                archiveEnabled: $archiveEnabled,
                archiveCollection: $archiveCollection
              }
            }')

          echo "Dispatching to $GH_REPO"
          echo "$payload" | jq '.'

          curl -sS -o /dev/stderr -w "HTTP %{http_code}\n" \
            -X POST "https://api.github.com/repos/$GH_REPO/dispatches" \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -H "Content-Type: application/json" \
            -d "$payload"

          # Note: Expected status is 204 No Content